<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog">
		<item value="false" key="isRegEx"/>
		<item value="DbConn2nd" key="selection"/>
		<item value="false" key="casesensitive"/>
		<item value="false" key="incremental"/>
		<item value="true" key="wrap"/>
		<item value="false" key="wholeword"/>
		<list key="findhistory">
			<item value="DbConn2nd"/>
			<item value="pSqlSetNames"/>
			<item value="nVehicleNumber"/>
			<item value="//============================================================================&#x0A;// Name        : TSP.cpp&#x0A;// Author      :&#x0A;// Version     :&#x0A;// Copyright   : Your copyright notice&#x0A;// Description : Hello World in C++, Ansi-style&#x0A;//============================================================================&#x0A;&#x0A;&#x0A;#include &quot;stdafx.h&quot;&#x0A;&#x0A;#include &quot;TspView.h&quot;&#x0A;&#x0A;//#include &lt;iostream&gt;&#x0A;//#include &lt;stdio.h&gt;&#x0A;&#x0A;int TSPView::_nSearchIndexStart = 1;&#x0A;&#x0A;TSPView *TSPView::pInstance= NULL;&#x0A;&#x0A;TSPView::TSPView(){&#x0A;&#x0A;&#x09;//pTSPView = this;&#x0A;&#x09;pInstance = this;&#x0A;&#x0A;&#x09;_generation = 0;&#x0A;&#x09;_fitness = 0;&#x0A;&#x0A;&#x09;nVehicleFlg = new int[512]();&#x09;&#x09;&#x09;&#x09;// 일단 32개 할당하자 넉넉하게 ㅅㅂ&#x0A;&#x09;nVehiclePay = new int[512]();&#x09;&#x09;&#x09;&#x09;// 일단 32개 할당하자 넉넉하게 ㅅㅂ&#x0A;&#x09;nVehicleCnt = new int[512]();&#x09;&#x09;&#x09;&#x09;// 일단 32개 할당하자 넉넉하게 ㅅㅂ&#x0A;&#x0A;&#x0A;&#x09;//TSP::GetInstance().GetAlgorithm()-&gt;SubscribeObserver( this );&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;SubscribeObserver( pInstance );&#x0A;&#x0A;}&#x0A;&#x0A;TSPView::~TSPView()&#x0A;{&#x0A;&#x0A;}&#x0A;&#x0A;&#x0A;//TSPView::TSPView(){}&#x0A;//TSPView::~TSPView(){}&#x0A;&#x0A;&#x0A;&#x0A;/*&#x0A;void TSPView::init()&#x0A;{&#x0A;&#x09;_generation = 0;&#x0A;&#x09;_fitness = 0;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;SubscribeObserver( this );&#x0A;&#x09;return;&#x0A;}&#x0A;*/&#x0A;&#x0A;void TSPView::init()&#x0A;{&#x0A;&#x09;_generation = 0;&#x0A;&#x09;_fitness = 0;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;SubscribeObserver( this );&#x0A;}&#x0A;&#x0A;void TSPView::onStart()&#x0A;{&#x0A;&#x09;TspCities::GetInstance().locationInitialize();&#x0A;&#x09;this-&gt;addLocation();&#x0A;&#x0A;&#x09;LOCK( _algControlSect );&#x0A;&#x0A;&#x09;bool resume = TSP::GetInstance().GetAlgorithm()-&gt;GetState() == GAS_PAUSED;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;StartSolving( resume );&#x0A;&#x0A;&#x09;UNLOCK( _algControlSect );&#x0A;}&#x0A;&#x0A;void TSPView::addLocation()&#x0A;{&#x0A;&#x09;std::wstring stdwstrGuestId[209] = { L&quot;admin&quot;,L&quot;232306&quot;,L&quot;232188&quot;,L&quot;231911&quot;,L&quot;231811&quot;,L&quot;231674&quot;,L&quot;231568&quot;,L&quot;231367&quot;,L&quot;231366&quot;,L&quot;231365&quot;,L&quot;231308&quot;,L&quot;231213&quot;,L&quot;231172&quot;,L&quot;230241&quot;,L&quot;229851&quot;,L&quot;229818&quot;,L&quot;229640&quot;,L&quot;229511&quot;,L&quot;229290&quot;,L&quot;229076&quot;,L&quot;228656&quot;,L&quot;228626&quot;,L&quot;228296&quot;,L&quot;227738&quot;,L&quot;227631&quot;,L&quot;227493&quot;,L&quot;227461&quot;,L&quot;227234&quot;,L&quot;227189&quot;,L&quot;226785&quot;,L&quot;226720&quot;,L&quot;226689&quot;,L&quot;226688&quot;,L&quot;226493&quot;,L&quot;226197&quot;,L&quot;226026&quot;,L&quot;225835&quot;,L&quot;225530&quot;,L&quot;225522&quot;,L&quot;225479&quot;,L&quot;225476&quot;,L&quot;225356&quot;,L&quot;224970&quot;,L&quot;224611&quot;,L&quot;224295&quot;,L&quot;223943&quot;,L&quot;223898&quot;,L&quot;223830&quot;,L&quot;223827&quot;,L&quot;223691&quot;,L&quot;223680&quot;,L&quot;223391&quot;,L&quot;223374&quot;,L&quot;223191&quot;,L&quot;223177&quot;,L&quot;223091&quot;,L&quot;222936&quot;,L&quot;222879&quot;,L&quot;222846&quot;,L&quot;222522&quot;,L&quot;222510&quot;,L&quot;222448&quot;,L&quot;222410&quot;,L&quot;222222&quot;,L&quot;222128&quot;,L&quot;222122&quot;,L&quot;222042&quot;,L&quot;221669&quot;,L&quot;221649&quot;,L&quot;221113&quot;,L&quot;221107&quot;,L&quot;221061&quot;,L&quot;220940&quot;,L&quot;220869&quot;,L&quot;220793&quot;,L&quot;220136&quot;,L&quot;220118&quot;,L&quot;219984&quot;,L&quot;219622&quot;,L&quot;219569&quot;,L&quot;219319&quot;,L&quot;219177&quot;,L&quot;219001&quot;,L&quot;218986&quot;,L&quot;218902&quot;,L&quot;218827&quot;,L&quot;218814&quot;,L&quot;218705&quot;,L&quot;218423&quot;,L&quot;218405&quot;,L&quot;218380&quot;,L&quot;218260&quot;,L&quot;218249&quot;,L&quot;218043&quot;,L&quot;218041&quot;,L&quot;217988&quot;,L&quot;217963&quot;,L&quot;217925&quot;,L&quot;217912&quot;,L&quot;217889&quot;,L&quot;217584&quot;,L&quot;217520&quot;,L&quot;217482&quot;,L&quot;217334&quot;,L&quot;217282&quot;,L&quot;217276&quot;,L&quot;217176&quot;,L&quot;216962&quot;,L&quot;216562&quot;,L&quot;216539&quot;,L&quot;216061&quot;,L&quot;215787&quot;,L&quot;215587&quot;,L&quot;215454&quot;,L&quot;215441&quot;,L&quot;215428&quot;,L&quot;215172&quot;,L&quot;215038&quot;,L&quot;214930&quot;,L&quot;214331&quot;,L&quot;214166&quot;,L&quot;213886&quot;,L&quot;213500&quot;,L&quot;213495&quot;,L&quot;213269&quot;,L&quot;213249&quot;,L&quot;213080&quot;,L&quot;212952&quot;,L&quot;212922&quot;,L&quot;212784&quot;,L&quot;212739&quot;,L&quot;212336&quot;,L&quot;212270&quot;,L&quot;212072&quot;,L&quot;212023&quot;,L&quot;211999&quot;,L&quot;211988&quot;,L&quot;211605&quot;,L&quot;211470&quot;,L&quot;210906&quot;,L&quot;210760&quot;,L&quot;210468&quot;,L&quot;210463&quot;,L&quot;210461&quot;,L&quot;210127&quot;,L&quot;210020&quot;,L&quot;210006&quot;,L&quot;209617&quot;,L&quot;209592&quot;,L&quot;209297&quot;,L&quot;209153&quot;,L&quot;208933&quot;,L&quot;208775&quot;,L&quot;208083&quot;,L&quot;207811&quot;,L&quot;207267&quot;,L&quot;206914&quot;,L&quot;206784&quot;,L&quot;206638&quot;,L&quot;206628&quot;,L&quot;206418&quot;,L&quot;206322&quot;,L&quot;206251&quot;,L&quot;206240&quot;,L&quot;206157&quot;,L&quot;206148&quot;,L&quot;206135&quot;,L&quot;206110&quot;,L&quot;206104&quot;,L&quot;205928&quot;,L&quot;205922&quot;,L&quot;205871&quot;,L&quot;205807&quot;,L&quot;205655&quot;,L&quot;205431&quot;,L&quot;205390&quot;,L&quot;205214&quot;,L&quot;205183&quot;,L&quot;205115&quot;,L&quot;204982&quot;,L&quot;204840&quot;,L&quot;204758&quot;,L&quot;204681&quot;,L&quot;204225&quot;,L&quot;203869&quot;,L&quot;203778&quot;,L&quot;203774&quot;,L&quot;203573&quot;,L&quot;203484&quot;,L&quot;203259&quot;,L&quot;203181&quot;,L&quot;203123&quot;,L&quot;202865&quot;,L&quot;202603&quot;,L&quot;202538&quot;,L&quot;202441&quot;,L&quot;202035&quot;,L&quot;201995&quot;,L&quot;201912&quot;,L&quot;201719&quot;,L&quot;201320&quot;,L&quot;201125&quot;,L&quot;201095&quot;,L&quot;200877&quot;,L&quot;200799&quot;,L&quot;200704&quot;,L&quot;200655&quot;,L&quot;200598&quot;,L&quot;200384&quot; };&#x0A;&#x09;double nLon[209] = { 128.539506, 128.586803, 128.594622, 128.556939, 128.572272, 128.617814, 128.618089, 128.623006, 128.631022, 128.598292, 128.599331, 128.495425, 128.492781, 128.598894, 128.617308, 128.568164, 128.597797, 128.596881, 128.507775, 128.550703, 128.603042, 128.512061, 128.547381, 128.552558, 128.598508, 128.52725, 128.561736, 128.491506, 128.61005, 128.546508, 128.608967, 128.5995, 128.629522, 128.607764, 128.569, 128.630758, 128.595214, 128.546747, 128.587442, 128.554167, 128.611928, 128.603044, 128.464306, 128.543075, 128.583411, 128.619256, 128.581583, 128.559411, 128.589778, 128.509433, 128.609692, 128.600853, 128.529606, 128.634861, 128.594428, 128.531208, 128.613353, 128.486247, 128.553828, 128.598169, 128.562983, 128.534306, 128.493261, 128.530111, 128.564147, 128.555372, 128.530369, 128.527256, 128.544989, 128.573272, 128.559889, 128.5537, 128.5421, 128.530533, 128.527406, 128.536733, 128.536528, 128.535717, 128.539194, 128.571572, 128.560933, 128.524889, 128.577344, 128.609303, 128.634261, 128.499108, 128.492825, 128.492803, 128.531697, 128.464075, 128.506106, 128.483875, 128.490042, 128.493956, 128.600697, 128.463517, 128.508989, 128.492917, 128.510314, 128.494753, 128.494358, 128.523289, 128.467658, 128.492531, 128.492544, 128.495242, 128.490169, 128.512522, 128.554506, 128.512878, 128.514964, 128.527258, 128.490042, 128.490606, 128.494031, 128.493306, 128.502303, 128.499508, 128.504642, 128.504481, 128.492494, 128.513931, 128.595908, 128.595847, 128.561039, 128.564492, 128.548292, 128.551022, 128.434547, 128.562469, 128.544397, 128.548639, 128.55105, 128.559875, 128.559558, 128.55615, 128.606167, 128.552364, 128.565381, 128.433375, 128.540403, 128.569761, 128.563089, 128.551336, 128.562158, 128.557825, 128.561025, 128.563711, 128.547194, 128.549025, 128.54205, 128.546811, 128.551022, 128.542986, 128.544906, 128.545153, 128.546333, 128.582722, 128.601778, 128.602783, 128.607536, 128.599247, 128.591917, 128.6035, 128.591772, 128.593206, 128.595853, 128.591839, 128.616203, 128.582736, 128.582622, 128.615997, 128.594172, 128.59055, 128.598639, 128.617939, 128.624339, 128.620622, 128.624036, 128.571214, 128.607978, 128.608214, 128.581189, 128.620186, 128.595086, 128.598236, 128.596556, 128.596156, 128.592772, 128.584689, 128.623919, 128.554506, 128.621725, 128.598508, 128.618942, 128.649372, 128.613214, 128.641817, 128.581872, 128.588486, 128.589922, 128.614817, 128.597086, 128.607533, 128.589744, 128.594228, 128.591486, 128.618928, 128.589983 };&#x0A;&#x09;double nLat[209] = { 35.929894, 35.856111,35.869556,35.943617,35.841758,35.854419,35.889625,35.844233,35.882503,35.868175,35.865506,35.855792,35.854472,35.866394,35.838022,35.846139,35.868797,35.866083,35.854431,35.855697,35.865633,35.854797,35.933453,35.891897,35.871264,35.849361,35.942947,35.841786,35.884814,35.925356,35.893336,35.865575,35.868458,35.892189,35.894689,35.884161,35.869567,35.860694,35.8671,35.870528,35.899236,35.888286,35.857953,35.846183,35.855706,35.883006,35.85665,35.927475,35.85105,35.854278,35.893333,35.859339,35.858339,35.873597,35.887439,35.882611,35.860583,35.850622,35.946906,35.867725,35.941847,35.845419,35.854892,35.850111,35.861061,35.872244,35.838944,35.859633,35.855058,35.853739,35.859447,35.855392,35.849994,35.83645,35.849453,35.854417,35.837036,35.849561,35.850153,35.846922,35.8595,35.842756,35.911644,35.893283,35.884744,35.855992,35.858725,35.854889,35.857194,35.858175,35.854542,35.852,35.839181,35.856069,35.846653,35.858092,35.849819,35.856317,35.854858,35.856292,35.851117,35.857769,35.850633,35.856439,35.856772,35.846119,35.835761,35.835422,35.950239,35.860742,35.834725,35.860047,35.839181,35.840514,35.857753,35.855119,35.853781,35.8515,35.853756,35.853275,35.855853,35.859178,35.874425,35.865439,35.942667,35.942972,35.925681,35.941619,36.388736,35.930033,35.925211,35.935794,35.932539,35.943194,35.942858,35.865628,36.074878,35.886406,35.954503,36.391142,35.931892,35.9388,35.942381,35.881619,35.933217,35.943439,36.263908,35.931831,35.913769,35.933011,35.912042,35.926222,35.928325,35.933339,35.921661,35.925411,35.923119,35.8533,35.870294,35.86625,35.891961,35.865772,35.867581,35.864642,35.866333,35.877778,35.866172,35.866333,35.875164,35.852269,35.888469,35.8707,35.869717,35.867483,35.920417,35.865078,35.853567,35.895653,35.858431,35.875453,35.893125,35.877769,35.885997,35.906644,35.874356,35.869489,35.860169,35.867189,35.870403,35.880719,35.852342,35.950239,35.858897,35.871264,35.859256,35.865231,35.861139,35.879503,35.868464,35.870531,35.867467,35.896733,35.865828,35.892747,35.885164,35.869358,35.889431,35.882889,35.852683 };&#x0A;&#x0A;&#x09;for (int i = 0; i &lt; 209; i++) {&#x0A;&#x0A;&#x09;&#x09;LOCK_THIS_OBJECT(lock);&#x0A;&#x0A;&#x09;&#x09;//TspCities::GetInstance().AddCity(stdwstrGuestId[i], nLon[i], nLat[i]);&#x0A;&#x0A;&#x09;&#x09;UNLOCK(lock);&#x0A;&#x09;}&#x0A;}&#x0A;&#x0A;void TSPView::StatisticUpdate(const GaStatistics&amp; statistics, const GaAlgorithm&amp; algorithm)&#x0A;{&#x0A;&#x09;_generation = statistics.GetCurrentGeneration();&#x0A;&#x0A;&#x09;/*&#x0A;&#x09;if( _generation % 1000 == 0 ){&#x0A;&#x09;&#x09;//&#x0A;&#x09;}&#x0A;&#x09;*/&#x0A;&#x09;//Invalidate();&#x0A;}&#x0A;&#x0A;void TSPView::NewBestChromosome(const GaChromosome&amp; newChromosome, const GaAlgorithm&amp; algorithm)&#x0A;{&#x0A;&#x09;LOCK_THIS_OBJECT( lock );&#x0A;&#x0A;&#x09;_bestChromosome.clear();&#x0A;&#x09;_bestChromosome = dynamic_cast&lt;const TspChromosome*&gt;( &amp;newChromosome )-&gt;GetCode();&#x0A;&#x0A;&#x09;_fitness = newChromosome.GetFitness();&#x0A;&#x0A;&#x09;UNLOCK( lock );&#x0A;&#x0A;}&#x0A;&#x0A;// Step00 - OnInit&#x0A;int TSPView::OnInit()&#x0A;{&#x0A;&#x0A;&#x09;printf(&quot;Step00 OnInit Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;_generation = 0;&#x0A;&#x09;_fitness = 0;&#x0A;&#x0A;&#x09;nVehicleFlg = new int[512]();&#x09;&#x09;&#x09;&#x09;// 일단 32개 할당하자 넉넉하게 ㅅㅂ&#x0A;&#x09;nVehiclePay = new int[512]();&#x09;&#x09;&#x09;&#x09;// 일단 32개 할당하자 넉넉하게 ㅅㅂ&#x0A;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;SubscribeObserver( this );&#x0A;&#x0A;&#x0A;&#x09;/*&#x0A;&#x09;printf(&quot;%s\n&quot;, pChrDeliveryDate);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;printf(&quot;%s\n&quot;, pChrMeridiemType);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;printf(&quot;%s\n&quot;, pChrLocationId);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;printf(&quot;%d\n&quot;, nVehicleNumber);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;*/&#x0A;&#x0A;&#x09;printf(&quot;Step00 OnInit End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;// Step01 - OnLoadDeliveryData&#x0A;int TSPView::OnLoadDeliveryData()&#x0A;{&#x0A;&#x09;printf(&quot;Step01 OnLoadDeliveryData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;/*&#x0A;&#x09;printf(&quot;%s\n&quot;, pChrDeliveryDate);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;printf(&quot;%s\n&quot;, pChrMeridiemType);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;printf(&quot;%s\n&quot;, pChrLocationId);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;printf(&quot;%d\n&quot;, nVehicleNumber);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;printf(&quot;OnLoadDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;*/&#x0A;&#x0A;&#x09;bComleteLoadDeliveryData = false;&#x0A;&#x0A;&#x09;MYSQL_RES *resOrderData;&#x09;// 주문데이터 OrderData Result&#x0A;&#x09;MYSQL_ROW rowOrderData;&#x09;&#x09;// 주문데이터 OrderData Rows&#x0A;&#x09;MYSQL_ROW rowOrderPay;&#x09;&#x09;// 주문금액정보 Rows&#x0A;&#x0A;&#x09;MYSQL_ROW rowOrderDataSe;&#x09;// 주문데이터 OrderData Rows&#x0A;&#x0A;&#x0A;&#x09;DbConn = mysql_init(NULL);&#x0A;&#x0A;&#x09;if (!mysql_real_connect(DbConn, MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, 0, NULL, 0)) {&#x0A;&#x09;&#x09;return 100;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;char *pSqlMutualData = new char[2048]();&#x09;// 배열쿼리문 메모리할당&#x0A;&#x09;char *pSqlOrderData = new char[2048]();&#x09;&#x09;// 배열쿼리문 메모리할당&#x0A;&#x09;char *pSqlOrderDataCnt = new char[2048]();&#x09;// 배열쿼리문 메모리할당&#x0A;&#x0A;&#x09;char *pSqlOrderDataSe = new char[2048]();&#x09;// 배열쿼리문 메모리할당&#x0A;&#x0A;&#x09;//char *pSqlSetNames = new char[512]();&#x09;&#x09;// 배열쿼리문 메모리할당&#x0A;&#x09;char *pSqlOrderPay = new char[2048]();&#x0A;&#x0A;&#x09;//sprintf(pSqlSetNames, &quot;set names euckr&quot;);&#x0A;&#x09;//if (mysql_query(DbConn, pSqlSetNames)) {&#x0A;&#x09;//&#x09;return 100;&#x0A;&#x09;//}&#x0A;&#x0A;&#x09;sprintf(pSqlOrderDataCnt&#x0A;&#x09;&#x09;&#x09;//,&quot;select count(*) from (SELECT count(A.ve_seq) AS dupleCount, A.ve_guestJuso, ve_guestLat, ve_guestLon, ve_accnoDupleJuso FROM (SELECT * FROM vehicleGuestOrderData WHERE ve_deliveryDate = &apos;%s&apos; AND ve_meridiemType = &apos;%s&apos; AND ve_meridiemFlag = &apos;%s&apos; AND ve_locationId = &apos;%s&apos; AND ve_guestJuso != &apos;&apos; AND ve_guestLat != &apos;0&apos; AND ve_guestLon != &apos;0&apos; GROUP by ve_accno ) AS A GROUP BY A.ve_guestLat, A.ve_guestLon ORDER BY A.ve_accno ) as B&quot;&#x0A;&#x09;&#x09;&#x09;//,&quot;SELECT COUNT(*) FROM ( SELECT * FROM ( SELECT * FROM vehicleAllocateResult WHERE 1=1 AND vr_deliveryDate=&apos;%s&apos; AND vr_meridiemType=&apos;%s&apos; AND vr_meridiemFlag=&apos;%s&apos; AND vr_vehicleNo=&apos;%s&apos; AND vr_locationId=&apos;%s&apos; GROUP BY vr_deguestAccno ) AS A GROUP BY A.vr_deguestLat, A.vr_deguestLon ORDER BY A.vr_deguestAccno ) AS B&quot;&#x0A;&#x09;&#x09;&#x09;,&quot;SELECT COUNT(*) FROM ( SELECT * FROM ( SELECT * FROM vehicleAllocateResult WHERE 1=1 AND vr_deliveryDate=&apos;%s&apos; AND vr_meridiemType=&apos;%s&apos; AND vr_meridiemFlag=&apos;%s&apos; AND vr_vehicleNo=&apos;%s&apos; AND vr_locationId=&apos;%s&apos; AND vr_errorJusoFlag != &apos;Y&apos; GROUP BY vr_deguestAccno ) AS A GROUP BY A.vr_deguestLat, A.vr_deguestLon ORDER BY A.vr_deguestAccno ) AS B&quot;&#x0A;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;,pChrVehicleNo&#x0A;&#x09;&#x09;&#x09;,pChrLocationId);&#x0A;&#x0A;&#x09;sprintf(pSqlOrderData&#x0A;&#x09;&#x09;&#x09;//,&quot;SELECT * FROM (SELECT * FROM (SELECT * FROM vehicleGuestOrderData WHERE ve_deliveryDate = &apos;%s&apos; AND ve_meridiemType = &apos;%s&apos; AND ve_meridiemFlag = &apos;%s&apos; AND ve_locationId = &apos;%s&apos; AND ve_guestJuso != &apos;&apos; AND ve_guestLat != &apos;0&apos; AND ve_guestLon != &apos;0&apos; GROUP by ve_accno ) AS A GROUP BY A.ve_guestLat, A.ve_guestLon ORDER BY A.ve_accno ) AS B&quot;&#x0A;&#x09;&#x09;&#x09;//,&quot;SELECT * FROM ( SELECT * FROM ( SELECT * FROM vehicleAllocateResult WHERE 1=1 AND vr_deliveryDate=&apos;%s&apos; AND vr_meridiemType=&apos;%s&apos; AND vr_meridiemFlag=&apos;%s&apos; AND vr_vehicleNo=&apos;%s&apos; AND vr_locationId=&apos;%s&apos; GROUP BY vr_deguestAccno ) AS A GROUP BY A.vr_deguestLat, A.vr_deguestLon ORDER BY A.vr_deguestAccno ) AS B&quot;&#x0A;&#x09;&#x09;&#x09;,&quot;SELECT * FROM ( SELECT * FROM ( SELECT * FROM vehicleAllocateResult WHERE 1=1 AND vr_deliveryDate=&apos;%s&apos; AND vr_meridiemType=&apos;%s&apos; AND vr_meridiemFlag=&apos;%s&apos; AND vr_vehicleNo=&apos;%s&apos; AND vr_locationId=&apos;%s&apos; AND vr_errorJusoFlag != &apos;Y&apos; GROUP BY vr_deguestAccno ) AS A GROUP BY A.vr_deguestLat, A.vr_deguestLon ORDER BY A.vr_deguestAccno ) AS B&quot;&#x0A;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;,pChrVehicleNo&#x0A;&#x09;&#x09;&#x09;,pChrLocationId); //아이코스&#x0A;&#x0A;&#x09;if (mysql_query(DbConn, pSqlOrderDataCnt)) {&#x0A;&#x09;&#x09;return 100;&#x0A;&#x09;}&#x0A;&#x09;resOrderData = mysql_use_result(DbConn);&#x0A;&#x0A;&#x09;rowOrderData = mysql_fetch_row(resOrderData);&#x0A;&#x09;nCountOrderData = atoi(rowOrderData[0]);&#x0A;&#x0A;&#x09;nVehiclePayIndex = new int[nCountOrderData]();&#x09;// (초기화) 각차량에 할당된 금액 - 경로갯수만큼 할당됨 - 데이터비교용&#x0A;&#x0A;&#x09;mysql_free_result(resOrderData); // 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x09;_vectorOrderData.resize(nCountOrderData);&#x09;// 배송지데이터 리사이즈&#x0A;&#x0A;&#x09;if (mysql_query(DbConn, pSqlOrderData)) {&#x0A;&#x09;&#x09;return 100;&#x0A;&#x09;}&#x0A;&#x09;resOrderData = mysql_use_result(DbConn);&#x0A;&#x0A;&#x09;DbConn2nd = mysql_init(NULL);&#x0A;&#x09;if (!mysql_real_connect(DbConn2nd, MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, 0, NULL, 0)) {&#x0A;&#x09;&#x09;return 100;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;int nIndexOrder = 0;&#x0A;&#x0A;&#x09;std::string ve_accno&#x09;&#x09;= &quot;&quot;;&#x0A;&#x09;//std::string ve_locationId&#x09;= &quot;&quot;;&#x0A;&#x09;//std::string ve_delilveryData= &quot;&quot;;&#x0A;&#x09;//std::string ve_meridiemType = &quot;&quot;;&#x0A;&#x09;//std::string ve_meridiemFlag = &quot;&quot;;&#x0A;&#x09;std::string ve_guestId&#x09;&#x09;= &quot;&quot;;&#x0A;&#x09;std::string ve_isShop&#x09;&#x09;= &quot;&quot;;&#x0A;&#x0A;&#x09;while (rowOrderData = mysql_fetch_row(resOrderData)) {&#x09;// count 뽑긔 왜케 어렵냐..&#x0A;&#x0A;&#x09;&#x09;ve_accno&#x09;= rowOrderData[1];&#x09;// vr_deguestAccno&#x0A;&#x09;&#x09;ve_guestId&#x09;= rowOrderData[6];&#x09;// vr_deguestId&#x0A;&#x09;&#x09;ve_isShop&#x09;= rowOrderData[28];&#x09;// vr_deguestIsShop&#x0A;&#x0A;&#x09;&#x09;MYSQL_RES *resOrderDataSe;&#x0A;&#x09;&#x09;sprintf(pSqlOrderDataSe&#x0A;&#x09;&#x09;&#x09;&#x09;//,&quot;select * from vehicleGuestOrderData where 1=1 and ve_accno=&apos;%s&apos; and ve_locationId=&apos;%s&apos; and ve_deliveryDate=&apos;%s&apos; and ve_meridiemType=&apos;%s&apos; and ve_meridiemFlag=&apos;%s&apos; and ve_guestId=&apos;%s&apos; and ve_isShop=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;,&quot;select * from vehicleGuestOrderData where 1=1 and ve_accno=&apos;%s&apos; and ve_locationId=&apos;%s&apos; and ve_deliveryDate=&apos;%s&apos; and ve_meridiemType=&apos;%s&apos; and ve_meridiemFlag=&apos;%s&apos; and ve_guestId=&apos;%s&apos; and ve_isShop=&apos;%s&apos; and ve_errorJusoFlag != &apos;Y&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;,ve_accno.c_str()&#x09;// vr_deguestAccno&#x0A;&#x09;&#x09;&#x09;&#x09;,pChrLocationId&#x09;&#x09;// vr_locationId&#x0A;&#x09;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x09;// vr_deliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemType&#x09;// vr_meridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x09;// vr_meridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;,ve_guestId.c_str()&#x09;// vr_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;,ve_isShop.c_str()&#x09;// vr_deguestIsShop&#x0A;&#x09;&#x09;&#x09;);&#x0A;&#x0A;&#x09;&#x09;if (mysql_query(DbConn2nd, pSqlOrderDataSe)) {&#x0A;&#x09;&#x09;&#x09;return 0;&#x0A;&#x09;&#x09;}&#x0A;&#x09;&#x09;resOrderDataSe = mysql_use_result(DbConn2nd);&#x0A;&#x09;&#x09;rowOrderDataSe = mysql_fetch_row(resOrderDataSe);&#x0A;&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_seq, rowOrderDataSe[0]);&#x09;&#x09;&#x09;&#x09;// ve_seq&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_accno, rowOrderDataSe[1]);&#x09;&#x09;&#x09;// ve_accno&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_locationId, rowOrderDataSe[2]);&#x09;&#x09;// ve_locationId&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_deliveryDate, rowOrderDataSe[3]);&#x09;&#x09;// ve_deliveryDate&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_meridiemType, rowOrderDataSe[4]);&#x09;&#x09;// ve_meridiemType&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestId, rowOrderDataSe[5]);&#x09;&#x09;&#x09;// ve_guestId&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestName, rowOrderDataSe[6]);&#x09;&#x09;// ve_guestName&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestTel, rowOrderDataSe[7]);&#x09;&#x09;&#x09;// ve_guestTel&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestJusoSubId, rowOrderDataSe[8]);&#x09;// ve_guestJusoSubId&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestJuso, rowOrderDataSe[9]);&#x09;&#x09;// ve_guestJuso&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_pay, rowOrderDataSe[10]);&#x09;&#x09;&#x09;&#x09;// ve_pay 밑에서 재정의합니다.&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestLat, rowOrderDataSe[11]);&#x09;&#x09;// ve_guestLat&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_guestLon, rowOrderDataSe[12]);&#x09;&#x09;// ve_guestLon&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_isNew, rowOrderDataSe[13]);&#x09;&#x09;&#x09;// ve_isNew&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_isShop, rowOrderDataSe[14]);&#x09;&#x09;&#x09;// ve_isShop&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_isRoad, rowOrderDataSe[15]);&#x09;&#x09;&#x09;// ve_isRoad&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_createDate, rowOrderDataSe[16]);&#x09;&#x09;// ve_createDate&#x0A;&#x09;&#x09;strcpy(_vectorOrderData[nIndexOrder].ve_accnoDupleJuso, rowOrderDataSe[17]);&#x09;// ve_accnoDupleJuso&#x0A;&#x09;&#x09;nIndexOrder++;&#x0A;&#x0A;&#x09;&#x09;mysql_free_result(resOrderDataSe);&#x09;// free&#x0A;&#x0A;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;mysql_free_result(resOrderData);&#x0A;&#x0A;&#x09;delete[] pSqlOrderData;&#x09;&#x09;// 주문데이터쿼리문 배열 메모리 해제&#x0A;&#x09;pSqlOrderData = NULL;&#x0A;&#x0A;&#x09;delete[] pSqlOrderDataCnt;&#x09;// 주문데이터카운터쿼리문 배열 메모리 해제&#x0A;&#x09;pSqlOrderDataCnt = NULL;&#x0A;&#x0A;&#x09;//delete[] pSqlSetNames;&#x0A;&#x09;//pSqlSetNames = NULL;&#x0A;&#x0A;&#x09;for (int i = 0; i &lt; _vectorOrderData.size(); i++) {&#x0A;&#x0A;&#x09;&#x09;if (strcmp(_vectorOrderData[i].ve_accnoDupleJuso, &quot;&quot;) != 0) {&#x0A;&#x0A;&#x09;&#x09;&#x09;MYSQL_RES *resOrderPay;&#x09;// 주문금액정보 Result&#x0A;&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlOrderPay&#x0A;&#x09;&#x09;&#x09;&#x09;//, &quot;SELECT SUM(ve_pay) FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate = &apos;%s&apos; AND ve_meridiemType = &apos;%s&apos; AND ve_meridiemFlag = &apos;%s&apos; AND ve_locationId = &apos;%s&apos; AND ve_accnoDupleJuso=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;//, &quot;SELECT SUM(ve_pay) FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate = &apos;%s&apos; AND ve_meridiemType = &apos;%s&apos; AND ve_meridiemFlag = &apos;%s&apos; AND ve_locationId = &apos;%s&apos; AND ve_accnoDupleJuso=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;SELECT SUM(ve_pay) FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate = &apos;%s&apos; AND ve_meridiemType = &apos;%s&apos; AND ve_meridiemFlag = &apos;%s&apos; AND ve_locationId = &apos;%s&apos; AND ve_accnoDupleJuso=&apos;%s&apos; AND ve_errorJusoFlag !=&apos;Y&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrLocationId&#x0A;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[i].ve_accnoDupleJuso);&#x0A;&#x0A;&#x09;&#x09;&#x09;if (mysql_query(DbConn, pSqlOrderPay)) {&#x0A;&#x09;&#x09;&#x09;&#x09;return 100;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;resOrderPay = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;&#x09;rowOrderPay = mysql_fetch_row(resOrderPay);&#x0A;&#x09;&#x09;&#x09;strcpy(_vectorOrderData[i].ve_pay, rowOrderPay[0]);&#x09;&#x09;&#x09;&#x09;// ve_pay&#x0A;&#x09;&#x09;&#x09;mysql_free_result(resOrderPay); // 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x09;&#x09;}&#x0A;&#x09;}&#x0A;&#x0A;&#x09;delete[] pSqlOrderPay;&#x0A;&#x09;pSqlOrderPay = NULL;&#x0A;&#x0A;&#x09;int nIndexMutual = 0;&#x0A;&#x0A;&#x09;MYSQL_ROW rowMutualData;&#x09;&#x09;// 상대거리데이터 MutualData Rows&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// 1. 자기자신의 거리를 제외하고 검색&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// 2. 크기는 nCountOrderData -1 값&#x0A;&#x0A;&#x09;for (int i = 0; i &lt; nCountOrderData; i++) {&#x0A;&#x0A;&#x09;&#x09;vector&lt;VectorMutualData&gt; tmpVectorMutualData;&#x0A;&#x09;&#x09;_vectorMutualData.push_back(tmpVectorMutualData);&#x0A;&#x09;&#x09;_vectorMutualData[i].resize(nCountOrderData);&#x09;&#x09;&#x09;// [i] 배열 리사이즈&#x0A;&#x0A;&#x09;&#x09;nIndexMutual = 0;// 초기화&#x0A;&#x0A;&#x09;&#x09;for (int j = 0; j &lt; nCountOrderData; j++) {&#x0A;&#x0A;&#x09;&#x09;&#x09;MYSQL_RES *resMutualData;&#x09;&#x09;// 상대거리데이터 MutualData Result&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlMutualData&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;SELECT&#x09; vd_seq \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_guestId \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_guestJusoSubId \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_deguestId \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_deguestJusoSubId \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_guestLat \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_guestLon \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_deguestLat \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_deguestLon \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_distanceValue \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_guestDate \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_deguestDate \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_guestIsShop \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_deguestIsShop \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_createDate \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vd_updateDate \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;FROM vehicleGuestMutualDistance WHERE 1 = 1 \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestJusoSubId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestIsShop=&apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestJusoSubId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestIsShop=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[i].ve_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[i].ve_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[i].ve_isShop&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[j].ve_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[j].ve_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _vectorOrderData[j].ve_isShop );&#x0A;&#x0A;&#x09;&#x09;&#x09;if (mysql_query(DbConn, pSqlMutualData)) {&#x0A;&#x09;&#x09;&#x09;&#x09;return 100;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;&#x09;resMutualData = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;&#x09;if ((rowMutualData = mysql_fetch_row(resMutualData)) != NULL) {&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_seq, rowMutualData[0]);&#x09;&#x09;&#x09;&#x09;// vd_seq&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestId, rowMutualData[1]);&#x09;&#x09;&#x09;// vd_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestJusoSubId, rowMutualData[2]);&#x09;&#x09;// vd_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestId, rowMutualData[3]);&#x09;&#x09;&#x09;// vd_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestJusoSubId, rowMutualData[4]);&#x09;// vd_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestLat, rowMutualData[5]);&#x09;&#x09;&#x09;// vd_guestLat&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestLon, rowMutualData[6]);&#x09;&#x09;&#x09;// vd_guestLon&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestLat, rowMutualData[7]);&#x09;&#x09;&#x09;// vd_deguestLat&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestLon, rowMutualData[8]);&#x09;&#x09;&#x09;// vd_deguestLon&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_distanceValue, rowMutualData[9]);&#x09;&#x09;// vd_distanceValue&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestDate, rowMutualData[10]);&#x09;&#x09;&#x09;// vd_guestDate&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestDate, rowMutualData[11]);&#x09;&#x09;// vd_deguestDate&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestIsShop, rowMutualData[12]);&#x09;&#x09;// vd_guestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestIsShop, rowMutualData[13]);&#x09;&#x09;// vd_deguestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_createDate, rowMutualData[14]);&#x09;&#x09;// vd_createDate&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_updateDate, rowMutualData[15]);&#x09;&#x09;// vd_updateDate&#x0A;&#x0A;&#x09;&#x09;&#x09;} else {&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_seq, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_seq&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestId, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestJusoSubId, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;// vd_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestId, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestJusoSubId, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;// vd_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestLat, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_guestLat&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestLon, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_guestLon&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestLat, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_deguestLat&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestLon, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_deguestLon&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_distanceValue, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;// vd_distanceValue&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestDate, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_guestDate&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestDate, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_deguestDate&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_guestIsShop, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_guestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_deguestIsShop, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;// vd_deguestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_createDate, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_createDate&#x0A;&#x09;&#x09;&#x09;&#x09;strcpy(_vectorMutualData[i][nIndexMutual].vd_updateDate, &quot;&quot;);&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vd_updateDate&#x0A;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;nIndexMutual++;&#x0A;&#x09;&#x09;&#x09;mysql_free_result(resMutualData);&#x09;// 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x09;&#x09;} // End For&#x0A;&#x0A;&#x09;} // End For&#x0A;&#x0A;&#x09;delete[] pSqlMutualData;&#x09;// 상대거리정보쿼리문 배열 메모리 해제&#x0A;&#x09;pSqlMutualData = NULL;&#x0A;&#x0A;&#x09;mysql_close(DbConn);&#x0A;&#x0A;&#x09;printf(&quot;Step01 OnLoadDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;&#x0A;}&#x0A;&#x0A;// Step02 - OnSetDeliveryData&#x0A;int TSPView::OnSetDeliveryData()&#x0A;{&#x0A;&#x09;printf(&quot;Step02 OnSetDeliveryData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;std::wstring stdwstr;&#x0A;&#x0A;&#x09;for (int i = 0; i &lt; nCountOrderData; i++) {&#x0A;&#x0A;&#x09;&#x09;stdwstr = L&quot;point&quot;;&#x0A;&#x09;&#x09;LOCK_THIS_OBJECT(lock);&#x0A;&#x0A;&#x09;&#x09;std::wstring stdwstrGuestId(_vectorOrderData[i].ve_guestId, _vectorOrderData[i].ve_guestId + strlen(_vectorOrderData[i].ve_guestId));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// guestId&#x0A;&#x09;&#x09;std::wstring stdwstrJusoSubId(_vectorOrderData[i].ve_guestJusoSubId, _vectorOrderData[i].ve_guestJusoSubId + strlen(_vectorOrderData[i].ve_guestJusoSubId));&#x09;// guestJusoSubId&#x0A;&#x09;&#x09;std::wstring stdwstrIsShop(_vectorOrderData[i].ve_isShop, _vectorOrderData[i].ve_isShop + strlen(_vectorOrderData[i].ve_isShop));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// isShop&#x0A;&#x09;&#x09;std::wstring stdwstrAccno(_vectorOrderData[i].ve_accno, _vectorOrderData[i].ve_accno + strlen(_vectorOrderData[i].ve_accno));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// accno&#x0A;&#x09;&#x09;std::wstring stdwstrAccnoDuple(_vectorOrderData[i].ve_accnoDupleJuso, _vectorOrderData[i].ve_accnoDupleJuso + strlen(_vectorOrderData[i].ve_accnoDupleJuso));&#x09;// accnoDuple&#x0A;&#x0A;&#x09;&#x09;//std::wstring stdwstrGuestName(_vectorOrderData[i].ve_guestName, _vectorOrderData[i].ve_guestName + strlen(_vectorOrderData[i].ve_guestName));&#x0A;&#x09;&#x09;//ConvertChar(_vectorOrderData[i].ve_guestName);&#x0A;&#x0A;&#x09;&#x09;//std::string strName(_vectorOrderData[i].ve_guestName);&#x0A;&#x09;&#x09;//std::wstring stdwstrGuestName = Utf8StringToWString(strName);&#x0A;&#x0A;&#x09;&#x09;//stdwstrGuestName = Func_MultiToWide((const char*)_vectorOrderData[i].ve_guestName, strlen((char*)_vectorOrderData[i].ve_guestName), CP_ACP);&#x09;&#x09;&#x09;&#x09;&#x09;// guestName&#x0A;&#x09;&#x09;//stdwstrGuestName = _vectorOrderData[i].ve_guestName;&#x0A;&#x0A;&#x09;&#x09;std::wstring stdwstrGuestTel(_vectorOrderData[i].ve_guestTel, _vectorOrderData[i].ve_guestTel + strlen(_vectorOrderData[i].ve_guestTel));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// guestTel&#x0A;&#x0A;&#x09;&#x09;//std::wstring stdwstrGuestJuso;&#x0A;&#x09;&#x09;//stdwstrGuestJuso = Func_MultiToWide((const char*)_vectorOrderData[i].ve_guestJuso, strlen((char*)_vectorOrderData[i].ve_guestJuso), CP_ACP);&#x09;&#x09;&#x09;&#x09;&#x09;// guestJuso&#x0A;&#x09;&#x09;//ConvertChar(_vectorOrderData[i].ve_guestJuso); // &lt;~~~~~~~~~~~ !!&#x0A;&#x09;&#x09;//stdwstrGuestJuso = Utf8StringToWString(_vectorOrderData[i].ve_guestJuso);&#x0A;&#x0A;&#x09;&#x09;//std::string strJuso(_vectorOrderData[i].ve_guestJuso);&#x0A;&#x09;&#x09;//std::wstring stdwstrJuso = Utf8StringToWString(strJuso);&#x0A;&#x0A;&#x09;&#x09;std::wstring stdwstrPay(_vectorOrderData[i].ve_pay, _vectorOrderData[i].ve_pay + strlen(_vectorOrderData[i].ve_pay));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// pay&#x0A;&#x0A;&#x09;&#x09;std::wstring stdwstrGuestLat(_vectorOrderData[i].ve_guestLat, _vectorOrderData[i].ve_guestLat + strlen(_vectorOrderData[i].ve_guestLat));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// guestLat&#x0A;&#x09;&#x09;std::wstring stdwstrGuestLon(_vectorOrderData[i].ve_guestLon, _vectorOrderData[i].ve_guestLon + strlen(_vectorOrderData[i].ve_guestLon));&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// guestLon&#x0A;&#x0A;&#x09;&#x09;TspCities::GetInstance().AddCity(stdwstr&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,atof(_vectorOrderData[i].ve_guestLat)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,atof(_vectorOrderData[i].ve_guestLon)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrGuestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrAccno&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrAccnoDuple&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,L&quot;guestName&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrGuestTel&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,L&quot;guestJuso&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrPay&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrGuestLat&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,stdwstrGuestLon&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x0A;&#x09;&#x09;_bestChromosome.clear();&#x0A;&#x0A;&#x09;&#x09;UNLOCK(lock);&#x0A;&#x09;}&#x0A;&#x0A;&#x09;printf(&quot;Step02 OnSetDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;// Step03 - OnSearchDeliveryData&#x0A;int TSPView::OnSearchDeliveryData()&#x0A;{&#x0A;&#x09;printf(&quot;Step03 OnSearchDeliveryData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;//TspCities::nGenerationLimit = 200000;&#x09;// GenerationLimit 재설정&#x0A;&#x09;TspCities::nGenerationLimit = 70000;&#x09;// GenerationLimit 재설정&#x0A;&#x0A;&#x09;TSP::GetInstance().smartInit();&#x0A;&#x0A;&#x09;LOCK(_algControlSect);&#x0A;&#x0A;&#x09;bool resume = TSP::GetInstance().GetAlgorithm()-&gt;GetState() == GAS_PAUSED;&#x0A;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;StartSolving(resume);&#x0A;&#x0A;&#x09;UNLOCK(_algControlSect);&#x0A;&#x0A;&#x09;while (1) {&#x0A;&#x0A;&#x09;&#x09;if (TSP::GetInstance().GetAlgorithm()-&gt;GetState() == GAS_CRITERIA_STOPPED) {&#x0A;&#x09;&#x09;&#x09;break;&#x0A;&#x09;&#x09;}&#x0A;&#x09;&#x09;sleep(2);&#x0A;&#x09;}&#x0A;&#x0A;&#x09;printf(&quot;Step03 OnSearchDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;// Step04 - OnRelocationDeliveryData&#x0A;int TSPView::OnRelocationDeliveryData()&#x0A;{&#x0A;&#x09;printf(&quot;Step04 OnRelocationDeliveryData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;// 배열갯수 초기화&#x0A;&#x09;int nBestChromosomeSize = 0;&#x0A;&#x09;nBestChromosomeSize = _bestChromosome.size();&#x0A;&#x0A;&#x09;// Relocation 에 값복사&#x0A;&#x09;_bestRelocation = _bestChromosome;&#x0A;&#x0A;&#x09;int nFirstIndex = 0;// 첫출발지(거점 위치)&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// 출발지 index 찾긔&#x0A;&#x09;if (_bestChromosome.size()) {&#x0A;&#x0A;&#x09;&#x09;for (int i = 0; i&lt;_bestChromosome.size(); i++) {&#x0A;&#x09;&#x09;&#x09;const TspCity* c = _bestChromosome[i];&#x0A;&#x09;&#x09;&#x09;if (c-&gt;GetID() == 1) {&#x0A;&#x09;&#x09;&#x09;&#x09;nFirstIndex = i;&#x0A;&#x09;&#x09;&#x09;&#x09;break;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;}&#x0A;&#x09;}&#x0A;&#x0A;&#x09;if (_bestRelocation.size()) {&#x0A;&#x0A;&#x09;&#x09;int nIndex = 0;&#x0A;&#x0A;&#x09;&#x09;// 1번 출발지(거점)위치부터 ~ 마지막까지 저장&#x0A;&#x09;&#x09;for (int i = nFirstIndex; i &lt; _bestChromosome.size(); i++) {&#x0A;&#x09;&#x09;&#x09;_bestRelocation[nIndex] = _bestChromosome[i];&#x0A;&#x09;&#x09;&#x09;nIndex++;&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;// 배열0번부터 ~ 출발지(거점)위치까지 저장&#x0A;&#x09;&#x09;for (int i = 0; i &lt; nFirstIndex; i++) {&#x0A;&#x09;&#x09;&#x09;_bestRelocation[nIndex] = _bestChromosome[i];&#x0A;&#x09;&#x09;&#x09;nIndex++;&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;// 순서대로 재배열된 경로값 백업( 저장 )&#x0A;&#x09;&#x09;ChromosomeCopy tmpChromosomeCopy;&#x0A;&#x09;&#x09;for (int i = 0; i &lt; (int)_bestChromosome.size(); i++) {&#x0A;&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._id&#x09;&#x09;&#x09;= _bestRelocation[i]-&gt;GetID();&#x09;&#x09;&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._name&#x09;&#x09;&#x09;= _bestRelocation[i]-&gt;GetName();&#x09;&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._x&#x09;&#x09;&#x09;= _bestRelocation[i]-&gt;GetX();&#x09;&#x09;&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._y&#x09;&#x09;&#x09;= _bestRelocation[i]-&gt;GetY();&#x09;&#x09;&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._guestId&#x09;&#x09;= _bestRelocation[i]-&gt;GetGuestId();&#x09;&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._isShop&#x09;&#x09;= _bestRelocation[i]-&gt;GetIsShop();&#x09;&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._jusoSubId&#x09;= _bestRelocation[i]-&gt;GetJusoSubId();&#x09;//&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._accno&#x09;&#x09;= _bestRelocation[i]-&gt;GetAccno();&#x09;&#x09;// accno 추가&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._accnoDuple&#x09;= _bestRelocation[i]-&gt;GetAccnoDuple();&#x09;// accnoDuple 추가&#x0A;&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._guestName&#x09;= _bestRelocation[i]-&gt;GetGuestName();&#x09;// guestName 추가&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._guestTel&#x09;&#x09;= _bestRelocation[i]-&gt;GetGuestTel();&#x09;// guestTel 추가&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._guestJuso&#x09;= _bestRelocation[i]-&gt;GetGuestJuso();&#x09;// guestJuso 추가&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._pay&#x09;&#x09;&#x09;= _bestRelocation[i]-&gt;GetPay();&#x09;&#x09;&#x09;// pay 추가&#x0A;&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._guestLat&#x09;&#x09;= _bestRelocation[i]-&gt;GetGuestLat();&#x09;// guestLat 추가&#x0A;&#x09;&#x09;&#x09;tmpChromosomeCopy._guestLon&#x09;&#x09;= _bestRelocation[i]-&gt;GetGuestLon();&#x09;// guestLon 추가&#x0A;&#x0A;&#x09;&#x09;&#x09;_bestChromosomeCopy.push_back(tmpChromosomeCopy);&#x0A;&#x09;&#x09;}&#x0A;&#x09;}&#x0A;&#x0A;&#x09;printf(&quot;Step04 OnRelocationDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;// Step05 - OnCalcDeliveryData&#x0A;int TSPView::OnCalcDeliveryData()&#x0A;{&#x0A;&#x09;printf(&quot;Step05 OnCalcDeliveryData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;MYSQL_RES *resOrderData;&#x09;// 주문데이터 OrderData Result&#x0A;&#x09;MYSQL_ROW rowOrderData;&#x09;&#x09;// 주문데이터 OrderData Rows&#x0A;&#x09;MYSQL_ROW rowSumData;&#x09;&#x09;// 주문데이터 OrderData Rows&#x0A;&#x0A;&#x09;DbConn = mysql_init(NULL);&#x0A;&#x0A;&#x09;if (!mysql_real_connect(DbConn, MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, 0, NULL, 0)) {&#x0A;&#x09;&#x09;return 500;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;char *pSqlOrderData = new char[1024]();&#x09;&#x09;// 쿼리 char 생성 및 초기화!&#x0A;&#x0A;&#x09;sprintf(pSqlOrderData&#x0A;&#x09;&#x09;, &quot;SELECT SUM(ve_pay) FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate=&apos;%s&apos; AND ve_meridiemType=&apos;%s&apos; AND ve_meridiemFlag=&apos;%s&apos; AND ve_locationId=&apos;%s&apos; AND ve_isJuso = &apos;Y&apos;&quot;&#x0A;&#x09;&#x09;, pChrDeliveryDate&#x0A;&#x09;&#x09;, pChrMeridiemType&#x0A;&#x09;&#x09;, pChrMeridiemFlag&#x0A;&#x09;&#x09;, pChrLocationId);&#x0A;&#x0A;&#x09;if (mysql_query(DbConn, pSqlOrderData)) {&#x0A;&#x09;&#x09;return 500;&#x0A;&#x09;}&#x0A;&#x09;resOrderData = mysql_use_result(DbConn);&#x0A;&#x09;rowOrderData = mysql_fetch_row(resOrderData);&#x0A;&#x0A;&#x09;mysql_free_result(resOrderData); // 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x09;int nTmpSum = 0; // 루프 누적&#x0A;&#x09;int nTmpSumIndex = 0; // 증가 누적&#x0A;&#x0A;&#x09;for (int i = 0; i &lt; _bestChromosomeCopy.size(); i++) {&#x0A;&#x0A;&#x0A;&#x0A;&#x09;&#x09;MYSQL_RES *resSumData;&#x09;// 주문데이터 OrderData Result&#x0A;&#x0A;&#x09;&#x09;std::string strIsShop = &quot;&quot;;&#x0A;&#x09;&#x09;strIsShop.assign(_bestChromosomeCopy[i]._isShop.begin(), _bestChromosomeCopy[i]._isShop.end());&#x0A;&#x0A;&#x09;&#x09;if (_bestChromosomeCopy[i]._accnoDuple == L&quot;&quot;) {&#x0A;&#x0A;&#x09;&#x09;&#x09;std::string strAccno = &quot;&quot;;&#x0A;&#x09;&#x09;&#x09;strAccno.assign(_bestChromosomeCopy[i]._accno.begin(), _bestChromosomeCopy[i]._accno.end());&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlOrderData&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,&quot;SELECT SUM(ve_pay) AS paySum FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate=&apos;%s&apos; AND ve_meridiemType=&apos;%s&apos; AND ve_meridiemFlag=&apos;%s&apos; AND ve_locationId=&apos;%s&apos; AND ve_accno=&apos;%s&apos; AND ve_isShop=&apos;%s&apos; AND ve_isJuso = &apos;Y&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrLocationId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,strAccno.c_str()&#x09;//_bestChromosomeCopy[i]._accno.c_str()&#x09;// required Charset Check&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,strIsShop.c_str()&#x09;//_bestChromosomeCopy[i]._isShop.c_str()&#x09;// required Charset Check&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x09;&#x09;} else {&#x0A;&#x09;&#x09;&#x09;std::string strAccnoDuple = &quot;&quot;;&#x0A;&#x09;&#x09;&#x09;strAccnoDuple.assign(_bestChromosomeCopy[i]._accnoDuple.begin(), _bestChromosomeCopy[i]._accnoDuple.end());&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlOrderData&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,&quot;SELECT SUM(ve_pay) AS paySum FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate=&apos;%s&apos; AND ve_meridiemType=&apos;%s&apos; AND ve_meridiemFlag=&apos;%s&apos; AND ve_locationId=&apos;%s&apos; AND ve_accnoDupleJuso=&apos;%s&apos; AND ve_isJuso = &apos;Y&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrLocationId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,strAccnoDuple.c_str()&#x09;//_bestChromosomeCopy[i]._accnoDuple.c_str()&#x09;&#x09;// required Charset Check&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;,strIsShop.c_str()&#x09;&#x09;//_bestChromosomeCopy[i]._isShop.c_str()&#x09;&#x09;&#x09;// required Charset Check&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x09;&#x09;} // End If&#x0A;&#x0A;&#x09;&#x09;if (mysql_query(DbConn, pSqlOrderData)) {&#x0A;&#x09;&#x09;&#x09;return 500;&#x0A;&#x09;&#x09;}&#x0A;&#x09;&#x09;resSumData = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;rowSumData = mysql_fetch_row(resSumData);&#x0A;&#x0A;&#x09;&#x09;nTmpSum += atoi(rowSumData[0]);&#x09;&#x09;// 금얙합산 중간값(누적값) 루프누적&#x0A;&#x09;&#x09;nTmpSumIndex += atoi(rowSumData[0]);&#x09;// 금얙합산 중간값(누적값) 증가누적&#x0A;&#x0A;&#x09;&#x09;nVehiclePayIndex[i] = atoi(rowOrderData[0]);&#x09;// 경로가 130개이면, 0번배열부터 ~ 129배열까지, 한코스당 할당된 누적금액을 배열에 저장함&#x0A;&#x0A;&#x09;&#x09;mysql_free_result(resSumData); // 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x09;} // End For&#x0A;&#x0A;&#x09;mysql_close(DbConn);&#x0A;&#x0A;&#x0A;&#x09;// 금액합산이 평균값보다 크면 배차 구분 플래그 지정&#x0A;&#x09;//if (nTmpSum &gt; pCChildView-&gt;nPayMod) {&#x0A;&#x09;/*************************************************************/&#x0A;&#x0A;&#x09;int nTmp = 0;&#x0A;&#x09;int nCount = _bestChromosomeCopy.size();&#x0A;&#x0A;&#x09;int nInnerIndex = 0;&#x0A;&#x0A;&#x09;int nBasePay = 1000;&#x09;// 증가값&#x0A;&#x09;int nBaseCheckPay = 10000;&#x0A;&#x09;int nCheckPay = 10000;&#x09;//&#x0A;&#x0A;&#x09;//int nAccuPay = 10000.0; // 가중치  1만원 단위로 증가 및 감소&#x0A;&#x09;//int nAccuPay = 5000.0; // 가중치  1만원 단위로 증가 및 감소&#x0A;&#x09;//int nAccuPay = 4500.0; // 가중치  1만원 단위로 증가 및 감소&#x0A;&#x09;//int nAccuPay = 2000.0; // 가중치  1만원 단위로 증가 및 감소&#x0A;&#x09;int nAccuPay = 2000.0; // 가중치  1만원 단위로 증가 및 감소&#x0A;&#x0A;&#x09;int nBaseHighLimit = 2000000.0;&#x0A;&#x0A;&#x09;int nAvg = (nTmpSum / nVehicleNumber);&#x0A;&#x09;nAvg = (nAvg * 0.9);&#x0A;&#x09;int nIndex = 0;&#x0A;&#x09;bool bFind = false;&#x0A;&#x0A;&#x09;bool bCheckComplete = true;&#x09;&#x09;//  최종완료상태&#x0A;&#x0A;&#x09;char *chrMessage = new char[1024]();&#x0A;&#x0A;&#x09;int nLoopCnt = 0;&#x0A;&#x0A;&#x09;while (bCheckComplete) {&#x0A;&#x0A;&#x09;&#x09;nTmp = 0;&#x0A;&#x09;&#x09;nIndex = 0;&#x0A;&#x09;&#x09;nInnerIndex = 0;&#x0A;&#x0A;&#x09;&#x09;for (int i = 0; i &lt;nCount; i++) {&#x0A;&#x0A;&#x09;&#x09;&#x09;nTmp += nVehiclePayIndex[i];&#x0A;&#x0A;&#x09;&#x09;&#x09;//if (nTmp &gt; nAvg) {&#x0A;&#x09;&#x09;&#x09;//if ( (nTmp &gt; nAvg) || (nInnerIndex &gt;= 10)) {&#x0A;&#x09;&#x09;&#x09;if ( (nInnerIndex &gt;= 10) || (nTmp &gt; nAvg)) {&#x0A;&#x09;&#x09;&#x09;&#x09;nVehicleFlg[nIndex] = i;&#x0A;&#x09;&#x09;&#x09;&#x09;nVehiclePay[nIndex] = nTmp;&#x0A;&#x09;&#x09;&#x09;&#x09;nTmp = 0;&#x0A;&#x09;&#x09;&#x09;&#x09;nIndex++;&#x0A;&#x09;&#x09;&#x09;&#x09;nInnerIndex=0;&#x0A;&#x09;&#x09;&#x09;} else {&#x0A;&#x09;&#x09;&#x09;&#x09;nVehicleFlg[nIndex] = i;&#x0A;&#x09;&#x09;&#x09;&#x09;nVehiclePay[nIndex] = nTmp;&#x0A;&#x09;&#x09;&#x09;&#x09;nInnerIndex++;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;//usleep(100);&#x0A;&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;if (nIndex &gt; (nVehicleNumber - 1)) {&#x0A;&#x09;&#x09;&#x09;// 초과&#x0A;&#x09;&#x09;&#x09;//nAvg = (nAvg + nAccuPay);&#x0A;&#x09;&#x09;&#x09;nAvg += nAccuPay;&#x0A;&#x09;&#x09;&#x09;nVehicleFlg = new int[512]();&#x09;&#x09;&#x09;&#x09;// more nVehicleNumber then Reset&#x0A;&#x09;&#x09;&#x09;nVehiclePay = new int[512]();&#x09;&#x09;&#x09;&#x09;// more nVehicleNumber then Reset&#x0A;&#x09;&#x09;&#x09;sprintf(chrMessage, &quot;Step05 OnCalcDeliveryData more nVehicleNumber then Reset nAvg[%d]\n&quot;,  nAvg);&#x0A;&#x09;&#x09;&#x09;printf(chrMessage);&#x0A;&#x09;&#x09;&#x09;fflush(stdout);&#x0A;&#x09;&#x09;} else if (nIndex &lt; (nVehicleNumber - 1)) {&#x0A;&#x09;&#x09;&#x09;// 미달&#x0A;&#x09;&#x09;&#x09;//nAvg = (nAvg - nAccuPay);&#x0A;&#x09;&#x09;&#x09;nAvg -= nAccuPay;&#x0A;&#x09;&#x09;&#x09;nVehicleFlg = new int[512]();&#x09;&#x09;&#x09;&#x09;// less nVehicleNumber then Reset&#x0A;&#x09;&#x09;&#x09;nVehiclePay = new int[512]();&#x09;&#x09;&#x09;&#x09;// less nVehicleNumber then Rest&#x0A;&#x09;&#x09;&#x09;sprintf(chrMessage, &quot;Step05 OnCalcDeliveryData less nVehicleNumber then Reset nAvg[%d]\n&quot;,  nAvg);&#x0A;&#x09;&#x09;&#x09;printf(chrMessage);&#x0A;&#x09;&#x09;&#x09;fflush(stdout);&#x0A;&#x09;&#x09;} else {&#x0A;&#x0A;&#x09;&#x09;&#x09;if (nVehiclePay[nIndex] == 0) {&#x0A;&#x09;&#x09;&#x09;&#x09;//nAvg = (nAvg - nAccuPay);&#x0A;&#x09;&#x09;&#x09;&#x09;nAvg -= nAccuPay;&#x0A;&#x09;&#x09;&#x09;&#x09;sprintf(chrMessage, &quot;Step05 OnCalcDeliveryData equal Reset nAvg[%d]\n&quot;,  nAvg);&#x0A;&#x09;&#x09;&#x09;&#x09;printf(chrMessage);&#x0A;&#x09;&#x09;&#x09;&#x09;fflush(stdout);&#x0A;&#x09;&#x09;&#x09;} else {&#x0A;&#x09;&#x09;&#x09;&#x09;//bCheckComplete = FALSE;&#x0A;&#x09;&#x09;&#x09;&#x09;break;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;//sleep(1);&#x0A;&#x09;&#x09;usleep(150);&#x0A;&#x0A;&#x09;&#x09;if(nLoopCnt &gt;= 130){&#x0A;&#x09;&#x09;&#x09;break;&#x0A;&#x09;&#x09;}&#x0A;&#x09;&#x09;nLoopCnt++;&#x0A;&#x0A;&#x09;} // End While&#x0A;&#x0A;&#x09;delete[] pSqlOrderData;&#x09;// 메모리 해제&#x0A;&#x09;delete[] chrMessage;&#x0A;&#x0A;&#x09;if(nLoopCnt &gt;= 130){&#x0A;&#x09;&#x09;printf(&quot;Step05 OnCalcDeliveryData ReCall\n&quot;);&#x0A;&#x09;&#x09;fflush(stdout);&#x0A;&#x09;&#x09;OnCalcDeliveryData();&#x0A;&#x09;}&#x0A;&#x0A;&#x09;printf(&quot;Step05 OnCalcDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;int TSPView::OnResearchDeliveryReady()&#x0A;{&#x0A;&#x0A;&#x0A;&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;&#x0A;// Step06 - OnResearchDeliveryData&#x0A;int TSPView::OnResearchDeliveryData()&#x0A;{&#x0A;&#x09;printf(&quot;Step06 OnResearchDeliveryData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;TspCities::nGenerationLimit = 70000;&#x09;// GenerationLimit 재설정&#x0A;&#x09;TSP::GetInstance().smartInit();&#x0A;&#x0A;&#x09;if (TSP::GetInstance().GetAlgorithm()-&gt;GetState() == GAS_CRITERIA_STOPPED) {&#x0A;&#x0A;&#x09;&#x09;bool bSearchEndStatus = true;&#x09;&#x09;// 최종 검색 완료 여부&#x0A;&#x09;&#x09;bool bSearchEndStatusStep = true;&#x09;// 순차 검색 완료 여부&#x0A;&#x0A;&#x09;&#x09;int nIndex = 0;&#x0A;&#x0A;&#x09;&#x09;_nSearchIndexStart = 1;&#x0A;&#x0A;&#x09;&#x09;_bestRouteEachResult.erase(_bestRouteEachResult.begin(), _bestRouteEachResult.end()); // 초기화&#x0A;&#x0A;&#x09;&#x09;for (int j = 0; j&lt;nVehicleNumber; j++) {&#x0A;&#x0A;&#x09;&#x09;&#x09;bSearchEndStatusStep = true;&#x0A;&#x09;&#x09;&#x09;bSearchEndStatus = true;&#x0A;&#x0A;&#x09;&#x09;&#x09;while (bSearchEndStatus) {&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;if (bSearchEndStatusStep == true) {&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;bSearchEndStatusStep = false;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;routeBestSearch(_nSearchIndexStart, nVehicleFlg[j]);&#x0A;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;if (TSP::GetInstance().GetAlgorithm()-&gt;GetState() == GAS_CRITERIA_STOPPED) {&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;bSearchEndStatus = false;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vector&lt;RouteEachResult&gt; tmpRouteEachResult;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult.push_back(tmpRouteEachResult);&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j].resize(_bestChromosome.size());&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;for (int i = 0; i &lt; _bestChromosome.size(); i++) {&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// 검색완료되면 데이터 저장&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;const TspCity * c = _bestChromosome[i];&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._id&#x09;&#x09;&#x09;= c-&gt;GetID();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._name&#x09;&#x09;= c-&gt;GetName();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._x&#x09;&#x09;&#x09;= c-&gt;GetX();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._y&#x09;&#x09;&#x09;= c-&gt;GetY();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._guestId&#x09;&#x09;= c-&gt;GetGuestId();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._isShop&#x09;&#x09;= c-&gt;GetIsShop();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._jusoSubId&#x09;= c-&gt;GetJusoSubId();&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._accno&#x09;&#x09;= c-&gt;GetAccno();&#x09;&#x09;// accno 추가&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._accnoDuple&#x09;= c-&gt;GetAccnoDuple();&#x09;// accnoDuple 추가&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._guestName&#x09;= c-&gt;GetGuestName();&#x09;// guestName 추가&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._guestTel&#x09;= c-&gt;GetGuestTel();&#x09;&#x09;// guestTel 추가&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._guestJuso&#x09;= c-&gt;GetGuestJuso();&#x09;// guestJuso 추가&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._pay&#x09;&#x09;&#x09;= c-&gt;GetPay();&#x09;&#x09;&#x09;// pay 추가&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._guestLat&#x09;= c-&gt;GetGuestLat();&#x09;&#x09;// guestLat 추가&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;_bestRouteEachResult[j][i]._guestLon&#x09;= c-&gt;GetGuestLon();&#x09;&#x09;// guestLon 추가&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;nIndex++;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;sleep(1);&#x0A;&#x0A;&#x09;&#x09;&#x09;} // End While&#x0A;&#x0A;&#x09;&#x09;&#x09;_nSearchIndexStart = (nVehicleFlg[j] + 1);&#x09;//&#x0A;&#x0A;&#x09;&#x09;} // End for&#x0A;&#x0A;&#x09;} else {&#x0A;&#x09;&#x09;printf(&quot;Step06 Start Error&quot;);&#x0A;&#x09;&#x09;fflush(stdout);&#x0A;&#x09;}&#x0A;&#x0A;&#x09;printf(&quot;Step06 OnResearchDeliveryData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;&#x0A;void TSPView::routeBestSearch(int nRefIndexStart, int nRefIndexStop)&#x0A;{&#x0A;&#x09;printf(&quot;Step06 routeBestSearch Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;_generation = 0;&#x0A;&#x09;_fitness = 0;&#x0A;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;SubscribeObserver(this);&#x0A;&#x09;TspCities::GetInstance().Clear();&#x0A;&#x0A;&#x09;std::wstring wstrGuestId;&#x09;&#x09;// guestId&#x0A;&#x09;std::wstring wstrJusoSubId;&#x09;&#x09;// jusoSubId&#x0A;&#x09;std::wstring wstrIsShop;&#x0A;&#x09;wstrGuestId = L&quot;admin&quot;;&#x0A;&#x09;wstrJusoSubId = L&quot;1&quot;;&#x0A;&#x09;wstrIsShop = L&quot;0&quot;;&#x0A;&#x0A;&#x09;const TspCity* c = _bestChromosome[0];&#x0A;&#x09;c-&gt;ResetNextId();&#x09;// id 초기화&#x0A;&#x0A;&#x0A;&#x09;LOCK_THIS_OBJECT(lock);&#x0A;&#x09;TspCities::GetInstance().AddCityExt(_bestChromosomeCopy[0]._name&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._x&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._y&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,wstrGuestId&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// guestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,wstrIsShop&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// isShop&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,wstrJusoSubId&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// JusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._id&#x09;&#x09;&#x09;&#x09;// originId 추가들어감&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._accno&#x09;&#x09;&#x09;// accno&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._accnoDuple&#x09;&#x09;// accnoDuple&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._guestName&#x09;&#x09;// guestName&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._guestTel&#x09;&#x09;// guestTel&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._guestJuso&#x09;&#x09;// guestJuso&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._pay&#x09;&#x09;&#x09;// pay&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._guestLat&#x09;&#x09;// guestLat&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,_bestChromosomeCopy[0]._guestLon&#x09;&#x09;// guestLon&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x09;_bestChromosome.clear();&#x0A;&#x09;UNLOCK(lock);&#x0A;&#x0A;&#x09;bool bWhileFlg = true;&#x0A;&#x09;int nWhileCnt = 0;&#x0A;&#x09;int nIndexAdd = nRefIndexStart;&#x0A;&#x0A;&#x09;int nIndexEnd = 0;&#x0A;&#x0A;&#x09;for (int i = nRefIndexStart; i &lt;= nRefIndexStop; i++) {&#x0A;&#x0A;&#x0A;&#x09;&#x09;LOCK_THIS_OBJECT(lock);&#x0A;&#x09;&#x09;TspCities::GetInstance().AddCityExt(_bestChromosomeCopy[i]._name&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._x&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._y&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._guestId&#x09;&#x09;// guestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._isShop&#x09;&#x09;// isShop&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._jusoSubId&#x09;&#x09;// JusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._id&#x09;&#x09;&#x09;// originId 추가들어감&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._accno&#x09;&#x09;&#x09;// accno&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._accnoDuple&#x09;// accnoDuple&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._guestName&#x09;&#x09;// guestName&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._guestTel&#x09;&#x09;// guestTel&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._guestJuso&#x09;&#x09;// guestJuso&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._pay&#x09;&#x09;&#x09;// pay&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._guestLat&#x09;&#x09;// lat&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, _bestChromosomeCopy[i]._guestLon&#x09;&#x09;// lon&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x09;&#x09;UNLOCK(lock);&#x0A;&#x0A;&#x09;} // End For&#x0A;&#x0A;&#x09;_bestChromosome.erase(_bestChromosome.begin(), _bestChromosome.end());&#x0A;&#x09;_bestChromosome.clear();&#x0A;&#x0A;&#x09;TspCities::nGenerationLimit&#x09;&#x09;= 20000;&#x09;// GenerationLimit 재설정&#x0A;&#x09;TSP::GetInstance().smartInit();&#x0A;&#x0A;&#x09;LOCK(_algControlSect);&#x0A;&#x0A;&#x09;bool resume = TSP::GetInstance().GetAlgorithm()-&gt;GetState() == GAS_PAUSED;&#x0A;&#x09;TSP::GetInstance().GetAlgorithm()-&gt;StartSolving(resume);&#x0A;&#x0A;&#x09;UNLOCK(_algControlSect);&#x0A;&#x0A;&#x09;printf(&quot;Step06 routeBestSearch End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;}&#x0A;&#x0A;// Step07 - OnRelocationVehicleData&#x0A;int TSPView::OnRelocationVehicleData()&#x0A;{&#x0A;&#x09;printf(&quot;Step07 OnRelocationVehicleData Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;int nFirstIndex;&#x0A;&#x09;int nIndex;&#x0A;&#x0A;&#x09;for (int i = 0; i &lt; nVehicleNumber; i++) {&#x0A;&#x0A;&#x09;&#x09;nFirstIndex = 0;&#x0A;&#x09;&#x09;for (int j = 0; j &lt; _bestRouteEachResult[i].size(); j++) {&#x0A;&#x09;&#x09;&#x09;if (_bestRouteEachResult[i][j]._id == 1) {&#x0A;&#x09;&#x09;&#x09;&#x09;nFirstIndex = j;&#x0A;&#x09;&#x09;&#x09;&#x09;break;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;vector&lt;RouteEachResult&gt; tmpRouteEachResult;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// 일케 해도됨&#x0A;&#x09;&#x09;_bestRouteEachRelocation.push_back(tmpRouteEachResult);&#x09;&#x09;&#x09;&#x09;// push_back 으로 밀어 놓고&#x0A;&#x09;&#x09;_bestRouteEachRelocation[i].resize(_bestRouteEachResult[i].size());&#x09;// 2차배열 사이즈 제조정함&#x0A;&#x0A;&#x09;&#x09;nIndex = 0;&#x0A;&#x09;&#x09;for (int k = nFirstIndex; k &lt; _bestRouteEachResult[i].size(); k++) {&#x0A;&#x09;&#x09;&#x09;_bestRouteEachRelocation[i][nIndex] = _bestRouteEachResult[i][k];&#x0A;&#x09;&#x09;&#x09;nIndex++;&#x0A;&#x09;&#x09;}&#x0A;&#x09;&#x09;for (int l = 0; l &lt; nFirstIndex; l++) {&#x0A;&#x09;&#x09;&#x09;_bestRouteEachRelocation[i][nIndex] = _bestRouteEachResult[i][l];&#x0A;&#x09;&#x09;&#x09;nIndex++;&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;printf(&quot;Step07 OnRelocationVehicleData End\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;return 0;&#x0A;}&#x0A;&#x0A;// Step08 - OnVehicleDataInsert&#x0A;int TSPView::OnVehicleDataInsert()&#x0A;{&#x0A;&#x09;printf(&quot;Step08 OnVehicleDataInsert Start\n&quot;);&#x0A;&#x09;fflush(stdout);&#x0A;&#x0A;&#x09;MYSQL_ROW rowMutualData;&#x09;//&#x0A;&#x09;MYSQL_ROW rowVehicleDataInsert;&#x09;//&#x0A;&#x0A;&#x09;DbConn = mysql_init(NULL);&#x0A;&#x0A;&#x09;if (!mysql_real_connect(DbConn, MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, 0, NULL, 0)) {&#x0A;&#x09;&#x09;return 0;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;char *pSqlMutualData = new char[2048]();&#x09;&#x09;&#x09;// 정보조회용 - select&#x0A;&#x09;char *pSqlVehicleDataInsert = new char[404800]();&#x09;// 정보입력용 - insert&#x0A;&#x09;char *pJsonData = new char[202400]();&#x09;&#x09;&#x09;&#x09;// Json Data용&#x0A;&#x09;char *pSqlSetNames = new char[512]();&#x09;&#x09;&#x09;&#x09;// 배열쿼리문 메모리할당&#x0A;&#x09;int nDistance = 0;&#x0A;&#x0A;&#x09;// Set Names Euckr&#x0A;&#x09;//sprintf(pSqlSetNames, &quot;set names euckr&quot;);&#x0A;&#x09;//if (mysql_query(pCChildView-&gt;DbConn, pSqlSetNames)) {&#x0A;&#x09;//&#x09;return 0;&#x0A;&#x09;//}&#x0A;&#x0A;&#x09;MYSQL_ROW rowErrorJusoData;&#x09;&#x09;// errorJusoData&#x0A;&#x09;MYSQL_RES *resErrorJusoData;&#x09;// errorJusoData Result&#x0A;&#x0A;&#x09;char *pSqlErrorJusoData = new char[2048]();&#x0A;&#x09;sprintf(pSqlErrorJusoData&#x0A;&#x09;&#x09;&#x09;,&quot;select * from vehicleAllocateResult where 1=1 and vr_deliveryDate=&apos;%s&apos; AND vr_meridiemType=&apos;%s&apos; AND vr_meridiemFlag=&apos;%s&apos; AND vr_vehicleNo=&apos;%s&apos; and vr_errorJusoFlag = &apos;Y&apos;&quot;&#x0A;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;,pChrVehicleNo);&#x0A;&#x09;if(mysql_query(DbConn, pSqlErrorJusoData)){&#x0A;&#x09;&#x09;return 800;&#x0A;&#x09;}&#x0A;&#x09;resErrorJusoData = mysql_use_result(DbConn);&#x0A;&#x09;rowErrorJusoData = mysql_fetch_row(resErrorJusoData);&#x0A;&#x09;mysql_free_result(resErrorJusoData);&#x09;&#x09;&#x09;&#x09;&#x09;// please Check !!&#x0A;&#x0A;&#x09;// delete&#x0A;&#x09;char *pChrVehicleDataDelete = new char[1024]();&#x0A;&#x09;sprintf(pChrVehicleDataDelete&#x0A;&#x09;&#x09;&#x09;,&quot;DELETE FROM vehicleAllocateResult WHERE 1=1 AND vr_deliveryDate=&apos;%s&apos; AND vr_meridiemType=&apos;%s&apos; AND vr_meridiemFlag=&apos;%s&apos; AND vr_vehicleNo=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;,pChrVehicleNo);&#x0A;&#x0A;&#x09;if(mysql_query(DbConn, pChrVehicleDataDelete)){&#x0A;&#x09;&#x09;return 800;&#x0A;&#x09;}&#x0A;&#x0A;&#x09;for (int j = 0; j &lt; _bestChromosomeCopy.size(); j++) {&#x0A;&#x0A;&#x09;&#x09;MYSQL_RES *resMutualData;&#x09;&#x09;&#x09;// 상대거리데이터 MutualData Result&#x0A;&#x09;&#x09;MYSQL_RES *resVehicleDataInsert;&#x09;// 상대거리데이터 MutualData Result&#x0A;&#x09;&#x09;nDistance = 0;&#x0A;&#x0A;&#x09;&#x09;std::string strGuestId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string strGuestJusoSubId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string strGuestIsShop = &quot;&quot;;&#x0A;&#x09;&#x09;std::string strDeGuestId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string strDeGuestJusoSubId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string strDeGuestIsShop = &quot;&quot;;&#x0A;&#x0A;&#x09;&#x09;// 1. 경로정보 먼저 뽑긔&#x0A;&#x09;&#x09;if (j == (_bestChromosomeCopy.size() - 1)) {&#x09;&#x09;// 마지막경로는 거점위치로&#x0A;&#x0A;&#x09;&#x09;&#x09;strGuestId.assign(_bestChromosomeCopy[j]._guestId.begin(), _bestChromosomeCopy[j]._guestId.end());&#x0A;&#x09;&#x09;&#x09;strGuestJusoSubId.assign(_bestChromosomeCopy[j]._jusoSubId.begin(), _bestChromosomeCopy[j]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;strGuestIsShop.assign(_bestChromosomeCopy[j]._isShop.begin(), _bestChromosomeCopy[j]._isShop.end());&#x0A;&#x09;&#x09;&#x09;strDeGuestId.assign(_bestChromosomeCopy[0]._guestId.begin(), _bestChromosomeCopy[0]._guestId.end());&#x0A;&#x09;&#x09;&#x09;strDeGuestJusoSubId.assign(_bestChromosomeCopy[0]._jusoSubId.begin(), _bestChromosomeCopy[0]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;strDeGuestIsShop.assign(_bestChromosomeCopy[0]._isShop.begin(), _bestChromosomeCopy[0]._isShop.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlMutualData&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;SELECT vd_seq, vd_guestId, vd_guestJusoSubId, vd_deguestId, vd_deguestJusoSubId, vd_guestLat, vd_guestLon, vd_deguestLat, vd_deguestLon, vd_distanceValue, vd_guestDate, vd_deguestDate, vd_jsonData, vd_guestIsShop, vd_deguestIsShop, vd_createDate, vd_updateDate \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;FROM vehicleGuestMutualDistance WHERE 1 = 1 \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestJusoSubId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestIsShop=&apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestJusoSubId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestIsShop=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;, strGuestId.c_str()&#x09;&#x09;&#x09;//_bestChromosomeCopy[j]._guestId.c_str()&#x09;&#x09;// vd_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;, strGuestJusoSubId.c_str()&#x09;&#x09;//_bestChromosomeCopy[j]._jusoSubId.c_str()&#x09;&#x09;// vd_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;, strGuestIsShop.c_str()&#x09;&#x09;//_bestChromosomeCopy[j]._isShop.c_str()&#x09;&#x09;// vd_guestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;, strDeGuestId.c_str()&#x09;&#x09;&#x09;//_bestChromosomeCopy[0]._guestId.c_str()&#x09;&#x09;// vd_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;, strDeGuestJusoSubId.c_str()&#x09;//_bestChromosomeCopy[0]._jusoSubId.c_str()&#x09;&#x09;// vd_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;, strDeGuestIsShop.c_str());&#x09;//_bestChromosomeCopy[0]._isShop.c_str()&#x09;&#x09;// vd_guestIsShop&#x0A;&#x0A;&#x0A;&#x09;&#x09;} else {&#x0A;&#x0A;&#x09;&#x09;&#x09;strGuestId.assign(_bestChromosomeCopy[j]._guestId.begin(), _bestChromosomeCopy[j]._guestId.end());&#x0A;&#x09;&#x09;&#x09;strGuestJusoSubId.assign(_bestChromosomeCopy[j]._jusoSubId.begin(), _bestChromosomeCopy[j]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;strGuestIsShop.assign(_bestChromosomeCopy[j]._isShop.begin(), _bestChromosomeCopy[j]._isShop.end());&#x0A;&#x09;&#x09;&#x09;strDeGuestId.assign(_bestChromosomeCopy[j+1]._guestId.begin(), _bestChromosomeCopy[j+1]._guestId.end());&#x0A;&#x09;&#x09;&#x09;strDeGuestJusoSubId.assign(_bestChromosomeCopy[j+1]._jusoSubId.begin(), _bestChromosomeCopy[j+1]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;strDeGuestIsShop.assign(_bestChromosomeCopy[j+1]._isShop.begin(), _bestChromosomeCopy[j+1]._isShop.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlMutualData&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;SELECT vd_seq, vd_guestId, vd_guestJusoSubId, vd_deguestId, vd_deguestJusoSubId, vd_guestLat, vd_guestLon, vd_deguestLat, vd_deguestLon, vd_distanceValue, vd_guestDate, vd_deguestDate, vd_jsonData, vd_guestIsShop, vd_deguestIsShop, vd_createDate, vd_updateDate \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;FROM vehicleGuestMutualDistance WHERE 1 = 1 \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestJusoSubId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_guestIsShop=&apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestJusoSubId = &apos;%s&apos; \&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;AND vd_deguestIsShop=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;, strGuestId.c_str()&#x09;&#x09;&#x09;//_bestChromosomeCopy[j]._guestId.c_str()&#x09;&#x09;// vd_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;, strGuestJusoSubId.c_str()&#x09;&#x09;//_bestChromosomeCopy[j]._jusoSubId.c_str()&#x09;&#x09;// vd_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;, strGuestIsShop.c_str()&#x09;&#x09;//_bestChromosomeCopy[j]._isShop.c_str()&#x09;&#x09;// vd_guestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;, strDeGuestId.c_str()&#x09;&#x09;&#x09;//_bestChromosomeCopy[j + 1]._guestId.c_str()&#x09;// vd_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;, strDeGuestJusoSubId.c_str()&#x09;//_bestChromosomeCopy[j + 1]._jusoSubId.c_str()&#x09;// vd_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;, strDeGuestIsShop.c_str()&#x09;&#x09;//_bestChromosomeCopy[j + 1]._isShop.c_str()&#x09;// vd_guestIsShop&#x0A;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;if (mysql_query(DbConn, pSqlMutualData)) {&#x0A;&#x09;&#x09;&#x09;return 800;&#x0A;&#x09;&#x09;}&#x0A;&#x09;&#x09;resMutualData = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;rowMutualData = mysql_fetch_row(resMutualData);&#x0A;&#x0A;&#x09;&#x09;// 2. 결과데이터 입력&#x0A;&#x09;&#x09;nDistance = atoi(rowMutualData[9]);&#x0A;&#x09;&#x09;strcpy(pJsonData, rowMutualData[12]);&#x0A;&#x09;&#x09;mysql_free_result(resMutualData);&#x09;&#x09;&#x09;// 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x0A;&#x09;&#x09;std::string vr_deguestAccno = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestName = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestTel = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestPay = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_guestId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_guestJusoSubId = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestJusoSubId = &quot;&quot;;&#x0A;&#x0A;&#x09;&#x09;std::string vr_guestLat = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_guestLon = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestLat = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestLon = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_Juso = &quot;&quot;;&#x0A;&#x0A;&#x09;&#x09;std::string vr_guestIsShop = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_deguestIsShop = &quot;&quot;;&#x0A;&#x09;&#x09;std::string vr_accnoDupleJuso = &quot;&quot;;&#x0A;&#x0A;&#x09;&#x09;if (j == (_bestChromosomeCopy.size() - 1)) {&#x09;&#x09;// 마지막경로는 거점위치로&#x0A;&#x0A;&#x09;&#x09;&#x09;vr_deguestAccno.assign(_bestChromosomeCopy[0]._accno.begin(), _bestChromosomeCopy[0]._accno.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestName.assign(_bestChromosomeCopy[0]._guestName.begin(), _bestChromosomeCopy[0]._guestName.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestTel.assign(_bestChromosomeCopy[0]._guestTel.begin(), _bestChromosomeCopy[0]._guestTel.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestPay.assign(_bestChromosomeCopy[0]._pay.begin(), _bestChromosomeCopy[0]._pay.end());&#x0A;&#x09;&#x09;&#x09;vr_guestId.assign(_bestChromosomeCopy[j]._guestId.begin(), _bestChromosomeCopy[j]._guestId.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestId.assign(_bestChromosomeCopy[0]._guestId.begin(), _bestChromosomeCopy[0]._guestId.end());&#x0A;&#x09;&#x09;&#x09;vr_guestJusoSubId.assign(_bestChromosomeCopy[j]._jusoSubId.begin(), _bestChromosomeCopy[j]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestJusoSubId.assign(_bestChromosomeCopy[0]._jusoSubId.begin(), _bestChromosomeCopy[0]._jusoSubId.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;vr_guestLat.assign(_bestChromosomeCopy[j]._guestLat.begin(), _bestChromosomeCopy[j]._guestLat.end());&#x0A;&#x09;&#x09;&#x09;vr_guestLon.assign(_bestChromosomeCopy[j]._guestLon.begin(), _bestChromosomeCopy[j]._guestLon.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestLat.assign(_bestChromosomeCopy[0]._guestLat.begin(), _bestChromosomeCopy[0]._guestLat.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestLon.assign(_bestChromosomeCopy[0]._guestLon.begin(), _bestChromosomeCopy[0]._guestLon.end());&#x0A;&#x09;&#x09;&#x09;vr_Juso.assign(_bestChromosomeCopy[0]._guestJuso.begin(), _bestChromosomeCopy[0]._guestJuso.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;vr_guestIsShop.assign(_bestChromosomeCopy[j]._isShop.begin(), _bestChromosomeCopy[j]._isShop.end());&#x0A;&#x09;&#x09;&#x09;vr_deguestIsShop.assign(_bestChromosomeCopy[0]._isShop.begin(), _bestChromosomeCopy[0]._isShop.end());&#x0A;&#x09;&#x09;&#x09;vr_accnoDupleJuso.assign(_bestChromosomeCopy[0]._accnoDuple.begin(), _bestChromosomeCopy[0]._accnoDuple.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;sprintf(pSqlVehicleDataInsert&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;insert into vehicleAllocateResult set vr_deguestAccno=&apos;%s&apos;, vr_deguestName=&apos;%s&apos;, vr_deguestTel=&apos;%s&apos;, vr_deguestPay=&apos;%s&apos;, vr_guestId=&apos;%s&apos;, vr_deguestId=&apos;%s&apos;, vr_guestJusoSubId=&apos;%s&apos;, vr_deguestJusoSubId=&apos;%s&apos;, vr_vehicleNo=&apos;%s&apos;, vr_vehicleNoIndex=&apos;%d&apos;, vr_guestLat=&apos;%s&apos;, vr_guestLon=&apos;%s&apos;, vr_deguestLat=&apos;%s&apos;, vr_deguestLon=&apos;%s&apos;, vr_Juso=&apos;%s&apos;, vr_distanceValue=&apos;%d&apos;, vr_locationId=&apos;%s&apos;, vr_deliveryDate=&apos;%s&apos;, vr_meridiemType=&apos;%s&apos;, vr_delivererId=&apos;%s&apos;,vr_deliveryEndId=&apos;%s&apos;, vr_deliveryStatus=&apos;%s&apos;, vr_jsonData=&apos;%s&apos;, vr_createDate=%s, vr_guestIsShop=&apos;%s&apos;, vr_deguestIsShop=&apos;%s&apos;, vr_accnoDupleJuso=&apos;%s&apos;, vr_meridiemFlag=&apos;%s&apos; &quot;&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestAccno.c_str() //_bestChromosomeCopy[0]._accno.c_str()&#x09;&#x09;&#x09;// vr_deguestAccno&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestName.c_str() //_bestChromosomeCopy[0]._guestName.c_str()&#x09;&#x09;// vr_deguestName&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestTel.c_str() //_bestChromosomeCopy[0]._guestTel.c_str()&#x09;&#x09;&#x09;// vr_deguestTel&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestPay.c_str() //_bestChromosomeCopy[0]._pay.c_str()&#x09;&#x09;&#x09;&#x09;// vr_deguestPay&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_guestId.c_str() //_bestChromosomeCopy[j]._guestId.c_str()&#x09;&#x09;&#x09;&#x09;// vr_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestId.c_str() //_bestChromosomeCopy[0]._guestId.c_str()&#x09;&#x09;&#x09;// vr_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_guestJusoSubId.c_str() //_bestChromosomeCopy[j]._jusoSubId.c_str()&#x09;&#x09;// vr_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestJusoSubId.c_str() //_bestChromosomeCopy[0]._jusoSubId.c_str()&#x09;// vr_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrVehicleNo&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_vehicleNo&#x0A;&#x09;&#x09;&#x09;&#x09;, j&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_vehicleNoIndex&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_guestLat.c_str() //_bestChromosomeCopy[j]._guestLat.c_str()&#x09;&#x09;&#x09;// vr_guestLat&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_guestLon.c_str() //_bestChromosomeCopy[j]._guestLon.c_str()&#x09;&#x09;&#x09;// vr_guestLon&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestLat.c_str() //_bestChromosomeCopy[0]._guestLat.c_str()&#x09;&#x09;&#x09;// vr_deguestLat&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestLon.c_str() //_bestChromosomeCopy[0]._guestLon.c_str()&#x09;&#x09;&#x09;// vr_deguestLon&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_Juso.c_str() //_bestChromosomeCopy[0]._guestJuso.c_str()&#x09;&#x09;&#x09;&#x09;// vr_Juso&#x0A;&#x09;&#x09;&#x09;&#x09;, nDistance&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_distanceValue&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrLocationId&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_locationId&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrDeliveryDate&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_deliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrMeridiemType&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_meridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_delivererId&#x09;&#x09;// 배송기사ID (배정된)&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_deliveryEndId&#x09;&#x09;// 배송기사ID (배송완료한)&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_deliveryStatus&#x09;// 배송완료상태값 배송완료:Y, 배송중:N&#x0A;&#x09;&#x09;&#x09;&#x09;, pJsonData //resMutualData[12]&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_jsonData&#x09;&#x09;&#x09;// 맵데이터&#x0A;&#x09;&#x09;&#x09;&#x09;, &quot;now()&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_createDate&#x09;&#x09;// 작성일자&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_guestIsShop.c_str() //_bestChromosomeCopy[j]._isShop.c_str()&#x09;&#x09;&#x09;// vr_guestIsShop&#x09;&#x09;// 고객 ERP, SHOP 구분&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_deguestIsShop.c_str() //_bestChromosomeCopy[0]._isShop.c_str()&#x09;&#x09;&#x09;// vr_deguestIsShop&#x09;&#x09;// 고객 ERP, SHOP 구분&#x0A;&#x09;&#x09;&#x09;&#x09;, vr_accnoDupleJuso.c_str() //_bestChromosomeCopy[0]._accnoDuple.c_str()&#x09;// vr_accnoDupleJuso&#x09;// deguest&#x0A;&#x09;&#x09;&#x09;&#x09;, pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x09;&#x09;&#x09;// 결과데이터 입력&#x0A;&#x09;&#x09;&#x09;if (mysql_query(DbConn, pSqlVehicleDataInsert)) {&#x0A;&#x09;&#x09;&#x09;&#x09;return 800;&#x0A;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;resVehicleDataInsert = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;&#x09;mysql_free_result(resVehicleDataInsert);&#x09;// 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x09;&#x09;} else {&#x0A;&#x0A;&#x09;&#x09;&#x09;if(_bestChromosomeCopy[j+1]._accnoDuple == L&quot;&quot;){&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestAccno.assign(_bestChromosomeCopy[j+1]._accno.begin(), _bestChromosomeCopy[j+1]._accno.end());&#x0A;&#x09;&#x09;&#x09;&#x09;//vr_deguestName.assign(_bestChromosomeCopy[j+1]._guestName.begin(), _bestChromosomeCopy[j+1]._guestName.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestTel.assign(_bestChromosomeCopy[j+1]._guestTel.begin(), _bestChromosomeCopy[j+1]._guestTel.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestPay.assign(_bestChromosomeCopy[j+1]._pay.begin(), _bestChromosomeCopy[j+1]._pay.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_guestId.assign(_bestChromosomeCopy[j]._guestId.begin(), _bestChromosomeCopy[j]._guestId.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestId.assign(_bestChromosomeCopy[j+1]._guestId.begin(), _bestChromosomeCopy[j+1]._guestId.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_guestJusoSubId.assign(_bestChromosomeCopy[j]._jusoSubId.begin(), _bestChromosomeCopy[j]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestJusoSubId.assign(_bestChromosomeCopy[j+1]._jusoSubId.begin(), _bestChromosomeCopy[j+1]._jusoSubId.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;vr_guestLat.assign(_bestChromosomeCopy[j]._guestLat.begin(), _bestChromosomeCopy[j]._guestLat.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_guestLon.assign(_bestChromosomeCopy[j]._guestLon.begin(), _bestChromosomeCopy[j]._guestLon.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestLat.assign(_bestChromosomeCopy[j+1]._guestLat.begin(), _bestChromosomeCopy[j+1]._guestLat.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestLon.assign(_bestChromosomeCopy[j+1]._guestLon.begin(), _bestChromosomeCopy[j+1]._guestLon.end());&#x0A;&#x09;&#x09;&#x09;&#x09;//vr_Juso.assign(_bestChromosomeCopy[j+1]._guestJuso.begin(), _bestChromosomeCopy[j+1]._guestJuso.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;vr_guestIsShop.assign(_bestChromosomeCopy[j]._isShop.begin(), _bestChromosomeCopy[j]._isShop.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestIsShop.assign(_bestChromosomeCopy[j+1]._isShop.begin(), _bestChromosomeCopy[j+1]._isShop.end());&#x0A;&#x09;&#x09;&#x09;&#x09;vr_accnoDupleJuso.assign(_bestChromosomeCopy[j+1]._accnoDuple.begin(), _bestChromosomeCopy[j+1]._accnoDuple.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;// 고객정보가져오긔&#x0A;&#x09;&#x09;&#x09;&#x09;char *pSqlDeGuestInfo = new char[2048]();&#x09;&#x09;// 고객명,고객주소 가져오긔&#x0A;&#x09;&#x09;&#x09;&#x09;MYSQL_RES *resDeGuestInfo;&#x0A;&#x09;&#x09;&#x09;&#x09;MYSQL_ROW rowDeGuestInfo;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;sprintf(pSqlDeGuestInfo&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,&quot; SELECT ve_guestName, ve_guestJuso FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate=&apos;%s&apos; AND ve_meridiemType=&apos;%s&apos; AND ve_meridiemFlag=&apos;%s&apos; AND ve_locationId=&apos;%s&apos; AND ve_accno=&apos;%s&apos; AND ve_guestId=&apos;%s&apos; AND ve_guestJusoSubId=&apos;%s&apos; AND ve_guestLat=&apos;%s&apos; AND ve_guestLon=&apos;%s&apos; AND ve_IsShop=&apos;%s&apos;&quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrLocationId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_deguestAccno.c_str()&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_deguestId.c_str()&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_deguestJusoSubId.c_str()&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_deguestLat.c_str()&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_deguestLon.c_str()&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_deguestIsShop.c_str()&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;if(mysql_query(DbConn, pSqlDeGuestInfo)){&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;return 800;&#x0A;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;&#x09;resDeGuestInfo = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;&#x09;&#x09;rowDeGuestInfo = mysql_fetch_row(resDeGuestInfo);&#x0A;&#x09;&#x09;&#x09;&#x09;vr_deguestName = rowDeGuestInfo[0];&#x0A;&#x09;&#x09;&#x09;&#x09;vr_Juso = rowDeGuestInfo[1];&#x0A;&#x09;&#x09;&#x09;&#x09;mysql_free_result(resDeGuestInfo);&#x09;// 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x09;&#x09;&#x09;&#x09;delete[] pSqlDeGuestInfo;&#x0A;&#x09;&#x09;&#x09;&#x09;pSqlDeGuestInfo = NULL;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;sprintf(pSqlVehicleDataInsert&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;insert into vehicleAllocateResult set vr_deguestAccno=&apos;%s&apos;, vr_deguestName=&apos;%s&apos;, vr_deguestTel=&apos;%s&apos;, vr_deguestPay=&apos;%s&apos;, vr_guestId=&apos;%s&apos;, vr_deguestId=&apos;%s&apos;, vr_guestJusoSubId=&apos;%s&apos;, vr_deguestJusoSubId=&apos;%s&apos;, vr_vehicleNo=&apos;%s&apos;, vr_vehicleNoIndex=&apos;%d&apos;, vr_guestLat=&apos;%s&apos;, vr_guestLon=&apos;%s&apos;, vr_deguestLat=&apos;%s&apos;, vr_deguestLon=&apos;%s&apos;, vr_Juso=&apos;%s&apos;, vr_distanceValue=&apos;%d&apos;, vr_locationId=&apos;%s&apos;, vr_deliveryDate=&apos;%s&apos;, vr_meridiemType=&apos;%s&apos;, vr_delivererId=&apos;%s&apos;,vr_deliveryEndId=&apos;%s&apos;, vr_deliveryStatus=&apos;%s&apos;, vr_jsonData=&apos;%s&apos;, vr_createDate=%s, vr_guestIsShop=&apos;%s&apos;, vr_deguestIsShop=&apos;%s&apos;, vr_accnoDupleJuso=&apos;%s&apos;, vr_meridiemFlag=&apos;%s&apos; &quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestAccno.c_str()//_bestChromosomeCopy[j+1]._accno.c_str()&#x09;&#x09;&#x09;// vr_deguestAccno&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestName.c_str()//_bestChromosomeCopy[j+1]._guestName.c_str()&#x09;&#x09;// vr_deguestName&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestTel.c_str()//_bestChromosomeCopy[j+1]._guestTel.c_str()&#x09;&#x09;&#x09;// vr_deguestTel&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestPay.c_str()//_bestChromosomeCopy[j+1]._pay.c_str()&#x09;&#x09;&#x09;&#x09;// vr_deguestPay&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestId.c_str()//_bestChromosomeCopy[j]._guestId.c_str()&#x09;&#x09;&#x09;&#x09;// vr_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestId.c_str()//_bestChromosomeCopy[j+1]._guestId.c_str()&#x09;&#x09;&#x09;// vr_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestJusoSubId.c_str()//_bestChromosomeCopy[j]._jusoSubId.c_str()&#x09;&#x09;// vr_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestJusoSubId.c_str()//_bestChromosomeCopy[j+1]._jusoSubId.c_str()&#x09;// vr_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, pChrVehicleNo&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_vehicleNo&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, j&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_vehicleNoIndex&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestLat.c_str()//_bestChromosomeCopy[j]._guestLat.c_str()&#x09;&#x09;&#x09;&#x09;// vr_guestLat&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestLon.c_str()//_bestChromosomeCopy[j]._guestLon.c_str()&#x09;&#x09;&#x09;&#x09;// vr_guestLon&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestLat.c_str()//_bestChromosomeCopy[j+1]._guestLat.c_str()&#x09;&#x09;&#x09;// vr_deguestLat&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestLon.c_str()//_bestChromosomeCopy[j+1]._guestLon.c_str()&#x09;&#x09;&#x09;// vr_deguestLon&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_Juso.c_str()//_bestChromosomeCopy[j+1]._guestJuso.c_str()&#x09;&#x09;&#x09;&#x09;// vr_Juso&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, nDistance//atoi(rowMutualData[9])&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_distanceValue&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, pChrLocationId&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_locationId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, pChrDeliveryDate&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_deliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, pChrMeridiemType&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_meridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_delivererId&#x09;&#x09;// 배송기사ID (배정된)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_deliveryEndId&#x09;&#x09;// 배송기사ID (배송완료한)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_deliveryStatus&#x09;// 배송완료상태값 배송완료:Y, 배송중:N&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, pJsonData //rowMutualData[12]&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_jsonData&#x09;&#x09;&#x09;// 맵데이터&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;now()&quot;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_createDate&#x09;&#x09;// 작성일자&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestIsShop.c_str()//_bestChromosomeCopy[j]._isShop.c_str()&#x09;&#x09;&#x09;// vr_guestIsShop&#x09;&#x09;// 고객 ERP, SHOP 구분&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestIsShop.c_str()//_bestChromosomeCopy[j+1]._isShop.c_str()&#x09;&#x09;// vr_deguestIsShop&#x09;&#x09;// 고객 ERP, SHOP 구분&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_accnoDupleJuso.c_str()//_bestChromosomeCopy[j+1]._accnoDuple.c_str()&#x09;// vr_accnoDupleJuso&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;, pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;);&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;// 결과데이터 입력&#x0A;&#x09;&#x09;&#x09;&#x09;if (mysql_query(DbConn, pSqlVehicleDataInsert)) {&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;return 800;&#x0A;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;&#x09;resVehicleDataInsert = mysql_use_result(DbConn);&#x0A;&#x09;&#x09;&#x09;&#x09;mysql_free_result(resVehicleDataInsert);&#x09;// 비워줘야됨 안비워주면 좃됨 ... 아 ㅅㅂ&#x0A;&#x0A;&#x09;&#x09;&#x09;} else {&#x0A;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;// duple 조회&#x0A;&#x09;&#x09;&#x09;&#x09;char *pSqlAccnoDupleData = new char[2048]();&#x09;&#x09;&#x09;// AccDuple조회용 - select&#x0A;&#x09;&#x09;&#x09;&#x09;MYSQL_RES *resAccnoDupleData;&#x0A;&#x09;&#x09;&#x09;&#x09;MYSQL_ROW rowAccnoDupleData;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;vr_accnoDupleJuso.assign(_bestChromosomeCopy[j+1]._accnoDuple.begin(), _bestChromosomeCopy[j+1]._accnoDuple.end());&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;sprintf(pSqlAccnoDupleData&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,&quot; SELECT * FROM vehicleGuestOrderData WHERE 1=1 AND ve_deliveryDate=&apos;%s&apos; AND ve_meridiemType=&apos;%s&apos; AND ve_meridiemFlag=&apos;%s&apos; AND ve_locationId=&apos;%s&apos; AND ve_accnoDupleJuso=&apos;%s&apos; &quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrDeliveryDate&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemType&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrMeridiemFlag&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,pChrLocationId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;,vr_accnoDupleJuso.c_str());&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;if(mysql_query(DbConn, pSqlAccnoDupleData)){&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;return 800;&#x0A;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x09;&#x09;&#x09;&#x09;resAccnoDupleData = mysql_use_result(DbConn);&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;DbConn2nd = mysql_init(NULL);&#x0A;&#x09;&#x09;&#x09;&#x09;if (!mysql_real_connect(DbConn2nd, MYSQL_HOST, MYSQL_USER, MYSQL_PWD, MYSQL_DB, 0, NULL, 0)) {&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;return 800;&#x0A;&#x09;&#x09;&#x09;&#x09;}&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;while(rowAccnoDupleData = mysql_fetch_row(resAccnoDupleData)){&#x0A;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;MYSQL_RES *resAccnoDupleDataInsert;&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestAccno = rowAccnoDupleData[1];&#x09;&#x09;// ve_accno(deguestAccno)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestName = rowAccnoDupleData[6];&#x09;&#x09;// ve_guestName(deguestName)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestTel = rowAccnoDupleData[7];&#x09;&#x09;// ve_guestTel(deguestTel)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestPay = rowAccnoDupleData[10];&#x09;&#x09;// ve_pay(deguestPay)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_guestId.assign(_bestChromosomeCopy[j]._guestId.begin(), _bestChromosomeCopy[j]._guestId.end());&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestId = rowAccnoDupleData[5];&#x09;&#x09;// ve_guestId(deguestId)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_guestJusoSubId.assign(_bestChromosomeCopy[j]._jusoSubId.begin(), _bestChromosomeCopy[j]._jusoSubId.end());&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestJusoSubId = rowAccnoDupleData[8];&#x09;// ve_guestId(deguestJusoSubId)&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_guestLat.assign(_bestChromosomeCopy[j]._guestLat.begin(), _bestChromosomeCopy[j]._guestLat.end());&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_guestLon.assign(_bestChromosomeCopy[j]._guestLon.begin(), _bestChromosomeCopy[j]._guestLon.end());&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestLat = rowAccnoDupleData[11];&#x09;&#x09;// ve_guestLat(deguestLat)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestLon = rowAccnoDupleData[12];&#x09;&#x09;// ve_guestLon(deguestLon)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_Juso = rowAccnoDupleData[9];&#x09;&#x09;&#x09;&#x09;// ve_Juso&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_guestIsShop.assign(_bestChromosomeCopy[j]._isShop.begin(), _bestChromosomeCopy[j]._isShop.end());&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_deguestIsShop = rowAccnoDupleData[14];&#x09;// ve_isShop(deguestIsShop)&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;vr_accnoDupleJuso = rowAccnoDupleData[17];&#x09;// ve_accDupleJuso&#x0A;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;sprintf(pSqlVehicleDataInsert&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, &quot;insert into vehicleAllocateResult set vr_deguestAccno=&apos;%s&apos;, vr_deguestName=&apos;%s&apos;, vr_deguestTel=&apos;%s&apos;, vr_deguestPay=&apos;%s&apos;, vr_guestId=&apos;%s&apos;, vr_deguestId=&apos;%s&apos;, vr_guestJusoSubId=&apos;%s&apos;, vr_deguestJusoSubId=&apos;%s&apos;, vr_vehicleNo=&apos;%s&apos;, vr_vehicleNoIndex=&apos;%d&apos;, vr_guestLat=&apos;%s&apos;, vr_guestLon=&apos;%s&apos;, vr_deguestLat=&apos;%s&apos;, vr_deguestLon=&apos;%s&apos;, vr_Juso=&apos;%s&apos;, vr_distanceValue=&apos;%d&apos;, vr_locationId=&apos;%s&apos;, vr_deliveryDate=&apos;%s&apos;, vr_meridiemType=&apos;%s&apos;, vr_delivererId=&apos;%s&apos;,vr_deliveryEndId=&apos;%s&apos;, vr_deliveryStatus=&apos;%s&apos;, vr_jsonData=&apos;%s&apos;, vr_createDate=%s, vr_guestIsShop=&apos;%s&apos;, vr_deguestIsShop=&apos;%s&apos;, vr_accnoDupleJuso=&apos;%s&apos;, vr_meridiemFlag=&apos;%s&apos; &quot;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestAccno.c_str()//_bestChromosomeCopy[j+1]._accno.c_str()&#x09;&#x09;&#x09;// vr_deguestAccno&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestName.c_str()//_bestChromosomeCopy[j+1]._guestName.c_str()&#x09;&#x09;// vr_deguestName&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestTel.c_str()//_bestChromosomeCopy[j+1]._guestTel.c_str()&#x09;&#x09;&#x09;// vr_deguestTel&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestPay.c_str()//_bestChromosomeCopy[j+1]._pay.c_str()&#x09;&#x09;&#x09;&#x09;// vr_deguestPay&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestId.c_str()//_bestChromosomeCopy[j]._guestId.c_str()&#x09;&#x09;&#x09;&#x09;// vr_guestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestId.c_str()//_bestChromosomeCopy[j+1]._guestId.c_str()&#x09;&#x09;&#x09;// vr_deguestId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_guestJusoSubId.c_str()//_bestChromosomeCopy[j]._jusoSubId.c_str()&#x09;&#x09;// vr_guestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, vr_deguestJusoSubId.c_str()//_bestChromosomeCopy[j+1]._jusoSubId.c_str()&#x09;// vr_deguestJusoSubId&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, pChrVehicleNo&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;// vr_vehicleNo&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;, j&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;&#x09;/"/>
			<item value="admin"/>
		</list>
		<list key="replacehistory">
		</list>
	</section>
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog_dialogBounds">
		<item value="319" key="DIALOG_WIDTH"/>
		<item value="1|Sans|10.0|0|GTK|1|" key="DIALOG_FONT_NAME"/>
		<item value="438" key="DIALOG_HEIGHT"/>
		<item value="1022" key="DIALOG_X_ORIGIN"/>
		<item value="28" key="DIALOG_Y_ORIGIN"/>
	</section>
</section>
